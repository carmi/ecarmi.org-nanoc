<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://ecarmi.org/</id>
  <title>ecarmi.org</title>
  <updated>2015-01-09T08:00:00Z</updated>
  <link rel="alternate" href="https://ecarmi.org/"/>
  <link rel="self" href="https://ecarmi.org/writing/feed.xml"/>
  <author>
    <name>Evan Carmi</name>
    <uri>https://ecarmi.org/about/</uri>
  </author>
  <entry>
    <id>tag:ecarmi.org,2015-01-09:/writing/autoload-boot2docker-environment-variables/</id>
    <title type="html">Autoload boot2docker environment variables on Mac OS X</title>
    <published>2015-01-09T08:00:00Z</published>
    <updated>2015-01-09T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/autoload-boot2docker-environment-variables/"/>
    <content type="html">&lt;p&gt;If you use Docker on Mac OS X then it’s likely you are using &lt;a href="https://docs.docker.com/installation/mac/"&gt;boot2docker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To autoload boot2docker’s environment variables (which is necessary to connect to your local docker daemon) you need to run &lt;code&gt;boot2docker shellinit&lt;/code&gt;. If you add the following line to your &lt;code&gt;~/.zshrc&lt;/code&gt; or &lt;code&gt;~/.bashrc&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;boot2docker shellinit 2&amp;gt;/dev/null&lt;span class="k"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will initialize the boot2docker environment variables and copy the output to null (so it doesn’t display anything when you open up your terminal.&lt;/p&gt;
</content>
    <summary type="html">Autoload boot2docker environment variables</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2015-01-07:/writing/call-with-iphone-from-mac-osx/</id>
    <title type="html">How to Make Calls with iPhone from Mac OSX</title>
    <published>2015-01-07T08:00:00Z</published>
    <updated>2015-01-07T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/call-with-iphone-from-mac-osx/"/>
    <content type="html">&lt;h1 id="the-short-version"&gt;The Short Version:&lt;/h1&gt;

&lt;p&gt;Here is a &lt;a href="/static/files/call-phone-number.zip"&gt;Mac OS X Services file&lt;/a&gt;, that you can download, unzip, and install (by clicking on) to select a phone number in Chrome, Preview, or any application and right click to call the number with your iPhone. Cool!&lt;/p&gt;

&lt;p&gt;&lt;img src="/static/img/call-phone-animation.gif" alt="Example using the call phone service"&gt;&lt;/p&gt;

&lt;h1 id="the-technical-version"&gt;The Technical Version&lt;/h1&gt;

&lt;p&gt;Mac OS X Yosemite introduced the ability to make and receive phone calls on your Mac using your iPhone’s cellular number. Once you &lt;a href="http://support.apple.com/kb/PH18756"&gt;get it setup&lt;/a&gt; when you receive a call a notification pops up on your Mac.&lt;/p&gt;

&lt;p&gt;&lt;img src="/static/img/zuck-calling.png" alt="Phone call from Zuck" title="When Zuck calls me" height="73px"&gt;&lt;/p&gt;

&lt;p&gt;That’s all fine and dandy. But what about making phone calls from you Mac?&lt;/p&gt;

&lt;h2 id="making-phone-calls-from-your-mac"&gt;Making Phone Calls From Your Mac&lt;/h2&gt;

&lt;p&gt;Out of the box, there a few ways to do this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You can open up FaceTime and select Audio and type in a phone number. Too many steps! Boo!&lt;/li&gt;
  &lt;li&gt;In Safari, you can select a phone number as text and a small button appears next to it where you can call with your iPhone.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="/static/img/calling-from-safari.png" alt="Calling the White House" title="Ringing Barack"&gt;&lt;/p&gt;

&lt;p&gt;But come on, who uses Safari?&lt;/p&gt;

&lt;h2 id="making-phone-calls-from-any-application"&gt;Making Phone Calls from Any Application&lt;/h2&gt;

&lt;p&gt;Ok, so I want the Safari feature but on Chrome, Firefox, and anywhere really. I can do this with Services.&lt;/p&gt;

&lt;p&gt;I’ve created a really simple Mac OS X Service that you can &lt;a href="/static/files/call-phone-number.zip"&gt;download here&lt;/a&gt;, unzip, and install (by double clicking).&lt;/p&gt;

&lt;p&gt;Once you install this Service you can go to Chrome or any application that allows for selecting text. If you can copy and paste the text from the app, then you can select a phone number, right click, and click “Call phone number”. This will pop up the FaceTime dialog box with a confirmation that you want to call the number. And, voilà, we now can make calls using our iPhone from our Mac.&lt;/p&gt;

&lt;h2 id="behind-the-scenes"&gt;Behind the scenes&lt;/h2&gt;

&lt;p&gt;Behind the scenes, and if you open the Call phone number workflow in &lt;a href="http://support.apple.com/en-us/HT2488"&gt;Automator&lt;/a&gt; you’ll see this is pretty much just piping the selected text into a AppleScript snippet.&lt;/p&gt;

&lt;p&gt;At first, I was looking for a way to make FaceTime calls, thinking that since the FaceTime app checks if the phone number is a FaceTime enabled line and if it is not, calls using your cellular the same would happen if instantiated from an Applescript. But this was not the case, and it just failed, frustratingly.&lt;/p&gt;

&lt;p&gt;This did not work:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-applescript"&gt;&lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;open location&lt;/span&gt; &lt;span class="s2"&gt;"facetime-audio://"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"?audio=yes"&lt;/span&gt;
  &lt;span class="no"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I was wondering if there were other location bindings in FaceTime that were similar to facetime-audio. I searched the Facetime.app and found this:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-bash"&gt;» ag -C &lt;span class="m"&gt;5&lt;/span&gt; facetime-audio /Applications/FaceTime.app
/Applications/FaceTime.app/Contents/Info.plist
38-     &amp;lt;string&amp;gt;FaceTime URL&amp;lt;/string&amp;gt;
39-     &amp;lt;key&amp;gt;CFBundleURLSchemes&amp;lt;/key&amp;gt;
40-     &amp;lt;array&amp;gt;
41-       &amp;lt;string&amp;gt;tel&amp;lt;/string&amp;gt;
42-       &amp;lt;string&amp;gt;facetime&amp;lt;/string&amp;gt;
43:       &amp;lt;string&amp;gt;facetime-audio&amp;lt;/string&amp;gt;
44-     &amp;lt;/array&amp;gt;
45-     &amp;lt;key&amp;gt;LSIsAppleDefaultForScheme&amp;lt;/key&amp;gt;
46-     &amp;lt;&lt;span class="nb"&gt;true&lt;/span&gt;/&amp;gt;
47-   &amp;lt;/dict&amp;gt;
48- &amp;lt;/array&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hmm, sure looks like I should try &lt;code&gt;tel&lt;/code&gt;. And that did the trick. I put this AppleScript in the Service, and it worked!&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-applescript"&gt;&lt;span class="k"&gt;on&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nb"&gt;open location&lt;/span&gt; &lt;span class="s2"&gt;"tel://"&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="s2"&gt;"?audio=yes"&lt;/span&gt;
  &lt;span class="no"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;input&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt; &lt;span class="nb"&gt;run&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let me know in the comments if this works for you or if any issues pop up with the workflow.&lt;/p&gt;
</content>
    <summary type="html">Browsing the web, and want to call a phone number with you iPhone with just a click? Now you can!</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2014-12-13:/writing/off-to-south-america/</id>
    <title type="html">South America</title>
    <published>2014-12-13T08:00:00Z</published>
    <updated>2014-12-13T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/off-to-south-america/"/>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Vulnerability is the birthplace of innovation, creativity and change.&lt;/p&gt;

  &lt;p&gt;– &lt;a href="https://www.ted.com/talks/brene_brown_on_vulnerability"&gt;Brené Brown&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve been thinking a lot about fear, vulnerability and courage recently.&lt;/p&gt;

&lt;p&gt;I’ve been very inspired by different writers who share with vulnerability.
I want to share with openness. I want to share both excitement and
ambition, and fear and challenge.&lt;/p&gt;

&lt;p&gt;So here it goes. January 1st, 2015 I will no longer be employed. I have no
plans to do freelance work for the next five months. That very well might
classify me as unemployed. I am not sure at what point unemployment shifts
to self-employment, but I think the $30 I make per week from &lt;a href="https://ecarmi.org/books/google-internship/"&gt;ebook
sales&lt;/a&gt; leaves me under the
cutoff.&lt;/p&gt;

&lt;p&gt;Over the next five months I am hoping to change that. I want to invest my
time and energy in creating a few sources of revenue that will allow me
support myself independently.&lt;/p&gt;

&lt;p&gt;I’ll be travelling in Argentina and Chile in February and March and then
participating in Exosphere’s &lt;a href="http://exosphe.re/bootcamp"&gt;8-week entrepreneurship
bootcamp&lt;/a&gt;. I’m planning to be in South America from
February to May.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The moment that you feel that, just possibly, you’re walking down the
street naked, exposing too much of your heart and your mind and what
exists on the inside, showing too much of yourself. That’s the moment you
may be starting to get it right.&lt;/p&gt;

  &lt;p&gt;– Neil Gaiman&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I make this life change and set out on a new adventure a fear of
failure accompanies me. This fear pushes me to hide myself and only share
if that which I’m sharing is a happy success story. I want to fight that
fear from the beginning, from right now, by sharing it.&lt;/p&gt;
</content>
    <summary type="html">Leaving my job, spending three months in South America, and going indie.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2014-02-09:/writing/apply-for-internship/</id>
    <title type="html">How to Apply for an Internship</title>
    <published>2014-02-09T08:00:00Z</published>
    <updated>2014-02-09T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/apply-for-internship/"/>
    <content type="html">
&lt;div class="ebook-flyer"&gt;
&lt;a href="/books/google-internship/"&gt;
&lt;img alt="How to get a Google Internship." class="cover" src="/static/img/google-internship-book-cover-240.png" style="float: left; padding-right: 15px;" width="180"&gt;&lt;/a&gt;

&lt;p&gt;
This is an excerpt from my book on getting Computer Science internships. Purchase the ebook now to learn how to get a job with companies including Google, The New York Times, and startups.
&lt;/p&gt;
&lt;div class="buy-it-today"&gt;
&lt;a href="/books/google-internship/" class="buy-it-today"&gt;&lt;button&gt;Get the ebook&lt;/button&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;script type="text/javascript" src="https://gumroad.com/js/gumroad.js"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h1 id="how-to-apply-for-an-internship"&gt;How to Apply for an Internship&lt;/h1&gt;

&lt;p&gt;It sounds simple, but I often receive questions related to the “how” of applying. There are actually a few different ways to approach companies that you are interested in working with. Depending on the type of company and who has the authority to ultimately give you an interview (or an offer) some ways may be more effective than others.&lt;/p&gt;

&lt;h2 id="where-to-apply"&gt;Where to Apply&lt;/h2&gt;

&lt;p&gt;First, you need to find the companies where you’d like to have an internship. Maybe you are interested in large companies, or maybe small companies. Maybe you want to work at a startup. Maybe you want to work with a consultancy. Or maybe you just want to work at a corporation that is widely known. Regardless, you should figure out what companies you are interested in, and then try to find similar companies. The key to the entire application process is tenacity. You need to keep applying until you get an offer. Don’t be discouraged if this takes some time. If you don’t get one internship, keep applying to more companies.&lt;/p&gt;

&lt;p&gt;Location can be a huge factor in your search. Be sure to know where companies are located, and if you want to spend time in that place. Are you willing to travel? Is there a city you’ve always wanted to live in?&lt;/p&gt;

&lt;p&gt;Where is a company located? If the company doesn’t have an about page with the information, be sure to check social media sites for locations. If you are still unsure of the location try running a &lt;code&gt;whois&lt;/code&gt; query on the company’s domain name. Open up a terminal and type:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;whois companyname.tld
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;where &lt;code&gt;companyname.tld&lt;/code&gt; is the company’s domain name. Do not include https or anything before the name.&lt;/p&gt;

&lt;p&gt;Once you’ve compiled a list of companies that you are interested in working with apply!&lt;/p&gt;

&lt;h1 id="ways-to-apply"&gt;Ways to apply&lt;/h1&gt;

&lt;h2 id="jobs-page"&gt;1: Jobs page&lt;/h2&gt;

&lt;p&gt;The first and most typical way to apply is via the company’s jobs page.&lt;/p&gt;

&lt;p&gt;If you’re looking for an internship at Google, they have a specific &lt;a href="http://www.google.com/about/jobs/students/"&gt;student jobs page&lt;/a&gt;. Many other large companies do too. Smaller companies will usually list internships alongside full time positions. Apply filling out any asked for information.&lt;/p&gt;

&lt;h2 id="cold-email"&gt;2: Cold Email&lt;/h2&gt;

&lt;p&gt;If you are looking at startups, consultancy shops, or small companies they may not list their internships. But that doesn’t mean they are not interested in having you as an intern. Find someone who works on the team and find an email address for them. If you can’t find a direct email, try going through the support contact information.&lt;/p&gt;

&lt;p&gt;When I was looking for internships I sent cold emails to many companies. Here’s an email I wrote to 37 signals:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi 37signals,&lt;/p&gt;

  &lt;p&gt;I’m interested in a programming internship with you for summer 2012. I 
know that there have been internships last year 
(http://37signals.com/svn/posts/2823-summer-internships-at-37signals) 
but I don’t see any mention of opportunities for 2012. Is that on the 
way, or should I go ahead and apply through the 2011 form.&lt;/p&gt;

  &lt;p&gt;Looking forward to hearing back from you.&lt;/p&gt;

  &lt;p&gt;Cheers,
Evan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The additional benefit of an email like this is to get on the radar of the company. If you also apply there a job form an email like this might make them remember you.&lt;/p&gt;

&lt;p&gt;Here is another email I sent to Disqus:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Disqus,&lt;/p&gt;

  &lt;p&gt;I’m a Python programmer, Djangonaut, and web developer and I am
interested in spending the summer working at Disqus.&lt;/p&gt;

  &lt;p&gt;I’ve attached a resume (PDF converted from LaTeX), but you should
definitely check out my Web site: http://ecarmi.org/&lt;/p&gt;

  &lt;p&gt;I would love to chat,
Evan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I attached a resume directly to the email. The next day their CEO replied saying:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Evan,&lt;/p&gt;

  &lt;p&gt;Thanks for reaching out. We’d love to talk to you further about this. Where are you located currently and when would you be available?&lt;/p&gt;

  &lt;p&gt;Thanks,
Daniel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sending cold emails can be a great way of applying because it means there won’t be tons of resumes to sift through for the company. If they find you qualified (and they already know you are motivated) then they can offer you a position without much hassle.&lt;/p&gt;

&lt;h2 id="api-project"&gt;3: API Project&lt;/h2&gt;

&lt;p&gt;If you are a more experienced programmer, or just willing to get your hands dirty, you can build a small project using the company’s product. If the company has an API you can spend a few hours hacking together something. This can be a great way to get the company’s attention.&lt;/p&gt;

&lt;p&gt;Similarly, if there are open source projects that are maintained by the company or developers who work at the company, you could build something using those projects. Maybe even contribute back to the projects. Something as simple as a tutorial or better documentation can be a great way to help out and get the attention of the team.&lt;/p&gt;

&lt;p&gt;You can be really creative finding a way to get the attention of a company. Your first step is just to get them to talk to you. Don’t worry about the interview until you have one scheduled.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This is an excerpt from my book on getting Computer Science internships. If you enjoyed this, &lt;a href="https://gum.co/google-internship-ebook" class="buy-it-today"&gt;buy the ebook!&lt;/a&gt;&lt;/p&gt;

</content>
    <summary type="html">It sounds simple, but I often receive questions related to the "how" of applying for an internship.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2014-02-08:/writing/faraday-proxy/</id>
    <title type="html">Setup a Faraday Proxy</title>
    <published>2014-02-08T08:00:00Z</published>
    <updated>2014-02-08T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/faraday-proxy/"/>
    <content type="html">&lt;p&gt;I like verbose logs. If I’m working with a service that ultimately communicates via HTTP, I like seeing the raw HTTP logs. I very often run a proxy in devlopment to look at raw HTTP traffic. Something like &lt;a href="http://www.charlesproxy.com/"&gt;Charles&lt;/a&gt; is easy to use for browser traffic. However, when you want to pass the traffic of a Ruby HTTP client through your proxy you need to do a bit of hacking. The normal method is to overwrite the &lt;code&gt;def connection&lt;/code&gt; definition with a monkey patch where the client sets up an HTTP connection. &lt;a href="http://stackoverflow.com/questions/11948656/omniauth-google-faraday-behind-the-proxy-how-setup-proxy/11953745#11953745"&gt;Something like this.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But I wanted a solution that was more general and didn’t require knowing about the client talking to Faraday. I also didn’t want to monkey patch the entire &lt;code&gt;Faraday::Connection&lt;/code&gt; class. So I wrote up a little monkey patch that wraps the Faraday::Connection &lt;code&gt;initialize&lt;/code&gt; method injecting in your proxy settings. If you toss this code into your app (if it’s a Rails app in an initializer) then all Faraday connections should go through your proxy. Cool!&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt; &lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#036;font-weight:bold"&gt;OpenSSL&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;SSL&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;VERIFY_PEER&lt;/span&gt; = &lt;span style="color:#036;font-weight:bold"&gt;OpenSSL&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;SSL&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;VERIFY_NONE&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;module&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Faraday&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Connection&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;    alias_method &lt;span style="color:#A60"&gt;:old_initialize&lt;/span&gt;, &lt;span style="color:#A60"&gt;:initialize&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n7" name="n7"&gt;7&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#06B;font-weight:bold"&gt;initialize&lt;/span&gt;(url = &lt;span style="color:#069"&gt;nil&lt;/span&gt;, options = {})
&lt;span class="line-numbers"&gt; &lt;a href="#n8" name="n8"&gt;8&lt;/a&gt;&lt;/span&gt;      proxy = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;http://127.0.0.1:3128&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n9" name="n9"&gt;9&lt;/a&gt;&lt;/span&gt;      (url.is_a?(&lt;span style="color:#036;font-weight:bold"&gt;Hash&lt;/span&gt;) ? url : options).merge!(&lt;span style="color:#606"&gt;proxy&lt;/span&gt;: proxy)
&lt;span class="line-numbers"&gt;&lt;strong&gt;&lt;a href="#n10" name="n10"&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n11" name="n11"&gt;11&lt;/a&gt;&lt;/span&gt;      old_initialize(url, options)
&lt;span class="line-numbers"&gt;&lt;a href="#n12" name="n12"&gt;12&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n13" name="n13"&gt;13&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n14" name="n14"&gt;14&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Change line 8 to be whatever path and port your proxy is running on.&lt;/p&gt;

&lt;p&gt;You should get a SSL verification error if you are making HTTPS calls to external services. You can disable this SSL verification during debugging with line 1.&lt;/p&gt;
</content>
    <summary type="html">A slick monkey patch to pass all Faraday traffic through a proxy.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-11-09:/writing/hackers-guide-to-healthcare/</id>
    <title type="html">A Hacker's Guide to Health Insurance in the USA</title>
    <published>2013-11-09T08:00:00Z</published>
    <updated>2013-11-09T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/hackers-guide-to-healthcare/"/>
    <content type="html">&lt;p&gt;Health Insurance in the United States is complicated and expensive. Even if you are one of the more fortunate American’s to have coverage that doesn’t mean things are simple or cheap. This is my brief guide to navigating the system for those who aren’t afraid of a few phone calls and details.&lt;/p&gt;

&lt;p&gt;Until recently I had been on my parents’ and university’s health insurance programs. I recently switched to my own health insurance plan sponsored by my employer. I moved to a new city this month and knowing that I had health insurance wanted to get a new primary care physician.&lt;/p&gt;

&lt;p&gt;When I signed up for my insurance plan with my employer I was given a choice of different plans. The difference was the monthly cost that I would have to pay in exchange for a higher deductible. Since I am young and healthy, I decided to go with the cheapest plan, with a higher deductible. This was a United HealthCare High Deductible Health Plan (HDHP) with a $3000 deductible. I assumed this was a pretty good plan and would cover routine preventative care.&lt;/p&gt;

&lt;p&gt;Things weren’t so simple. After I made the appointment I wanted to confirm my coverage. I called the number on the back of my health insurance and asked about my coverage. My insurance provider said they couldn’t give me any exact information unless I had the procedure codes from the doctor’s office.&lt;/p&gt;

&lt;p&gt;Determined to figure out exactly what I would be required to pay before I went into the office, I called the clinic where I had my appointment. I asked about the procedure codes. After being transferred to the billing specialist it was explained that there were a few different possibilities on how my appointment would be billed.&lt;/p&gt;

&lt;p&gt;Since I was new at the clinic it could be billed as a new patient appointment or as a physical. A new patient appointment had five different options each with a different procedure code.&lt;/p&gt;

&lt;p&gt;99201, 99202, 99203, 99204, and 99205, respectively for the five levels. I was told that 99201 and 99202 would be too basic, but unless the doctor needed to spend a lot of time with me it likely wouldn’t be a 99205. A bit of Googling reveals that the differences between these codes is  the difficulty in the medical decision making. A 99201 and 99202 state the procedure requires “straightforward medical decision making”. 99203, 99204, and 99205 require medical decision making of low complexity, a moderate complexity, and a high complexity respectively. I guess the clinic gets to decide on which code to bill.&lt;/p&gt;

&lt;p&gt;A physical was billed with the procedure code 99385. The clinic told me I would likely be billed as a new patient with a 99203 or 99204.&lt;/p&gt;

&lt;p&gt;Armed with exact procedure codes I got back in touch with my insurance provider. Any new patient exam (99201-5) would not be considered routine preventative care. It would be covered under my policy at 90% only after my deductible was met. Since I had not used any of my deductible up, it meant that this new patient appointment would end up costing me between $300 and $500 dollars out of pocket.&lt;/p&gt;

&lt;p&gt;However, a physical billed as a 99385 would be covered at 100% without any copay as routine general preventative care and would not go towards my deductible.&lt;/p&gt;

&lt;p&gt;So simply depending on what number the clinic decides to bill my insurance with decides whether I have to pay or  not. I called back the clinic to see if I could get a physical appointment billed as a 99385 instead of a new patient appointment. After being passed around and a someone asking the doctor I was told that yes, they would be willing to simply bill it as a physical with the 99385 procedure code. They said I’d need to be sure to remind the doctor to bill it as such during the appointment.&lt;/p&gt;

&lt;p&gt;These phone calls probably saved me $400 dollars in fees. The clinic and doctor were happy to bill it so that my insurance would cover it, but they needed to be told in advance and have it confirmed.&lt;/p&gt;

&lt;p&gt;I wish healthcare worked where you would know what you were going to be required to pay before going in, not afterwards.&lt;/p&gt;

&lt;p&gt;So my suggestions for others are to be sure to get the procedure code from your physician, and then contact your insurance provider with that procedure code to figure out your coverage. If you end up with a bill that you were not expecting later on you can usually get voice transcripts from your phone calls and use those to file an appeal. If you were told that something would be covered, your insurance will be (likley) required to actually cover it.&lt;/p&gt;

&lt;p&gt;I’d love to see a startup tackle this problem. I don’t want a healthcare insurance marketplace, I want a healthcare marketplace. I want to be able to shop online for my physical, for my broken wrist treatment, for my ACL surgery. This is like amazon.com where you don’t get to know the prices for the things you buy. It’s absurd.&lt;/p&gt;
</content>
    <summary type="html">A few phone calls saved me $400 dollars.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-10-20:/writing/pursuit-of-independence/</id>
    <title type="html">In Pursuit of Independence</title>
    <published>2013-10-20T07:00:00Z</published>
    <updated>2013-10-20T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/pursuit-of-independence/"/>
    <content type="html">&lt;p&gt;&lt;strong class="first-letter tight-kerning"&gt;T&lt;/strong&gt; his weekend I watched a bunch of &lt;a href="http://www.youtube.com/user/xoxofest"&gt;amazing videos&lt;/a&gt; from &lt;a href="http://2013.xoxofest.com/"&gt;XOXO&lt;/a&gt;. I first heard about XOXO from a tweet from Jacob Kaplan Moss:&lt;/p&gt;

&lt;blockquote class="twitter-tweet"&gt;
&lt;p&gt;&lt;a href="https://twitter.com/search?q=%23xoxofest&amp;amp;src=hash"&gt;#xoxofest&lt;/a&gt; left me inspired to write again. So I’m starting (naturally) with that lesson and a few others from XOXO: &lt;a href="http://t.co/BNqUH7RA8P"&gt;http://t.co/BNqUH7RA8P&lt;/a&gt;&lt;/p&gt;— jacobian (@jacobian) &lt;a href="https://twitter.com/jacobian/statuses/381957944641736704"&gt;September 23, 2013&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;

&lt;p&gt;I was curious, so I looked into it a bit more, and found out that this festival had just happened in Portland, Oregon – the city where I would be moving to in a few weeks. (Now the city that I moved to last week.)&lt;/p&gt;

&lt;p&gt;Everything I read about the conference resonated with me. A few weeks ago I &lt;a href="http://ecarmi.org/writing/startups-arent-for-everyone/"&gt;wrote the following&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I don’t think everyone should quit their job to pursue an idea. Rather, I think the people who will enjoy it should be encouraged to do it. Not so they can become rich, nor to grease the ego, but so that the pursuit of creativity becomes a legitimate pursuit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is the fundamental thing about XOXO that I really loved from watching the videos this weekend: it is a conference dedicated to the pursuit of independence.&lt;/p&gt;

&lt;p&gt;Andy Baio describes it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It’s about everyone using technology to make a living doing what they love.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The part of startups that I like so much is exactly this. It is creating a reality, and supporting a society where people can make a living doing what they love. If doing what you love is building technology companies and mobile applications, then you are lucky. But what about those who fall outside this narrow scope. This world doesn’t have VCs to give you money. But it does have success stories. It does have heroes who have found a niche.&lt;/p&gt;

&lt;p&gt;The question might seem ridiculous, but why is it important to empower people to make a living do what they love. It sure sounds nice, but why is this a notable goal for a society. Why is this something that is deserving of our fight?&lt;/p&gt;

&lt;p&gt;I think an answer is that at the end of the day people are just people. Regardless of any media connecting two ends – present or future – we are still human. But this peopleness, this humanness, is lost in big corporations. It is lost in scale. The institution blocks the direct connection from one person to another. In the convenience of it we lose something, something that is hard to describe. It is the difference between a hand-written note and an email. It is the difference between a local coffee shop and a corporate chain. Convenience can be great, but we need to pay attention to what we give up in return. Maybe the chitchat with a cashier has a value. When the underlying metric becomes only money, and it always becomes money in corporations, the tangential values of these other things are lost.&lt;/p&gt;

&lt;p&gt;The most important things in life are always direct connections between people. It is relationships between people that are more valuable than anything else. Independent people and their projects and companies have consistently kept their “humanness”. By supporting people making a living doing what they love, we are supporting a more human society. I’ll leave the answer to why that is a good thing up to you.&lt;/p&gt;
</content>
    <summary type="html">Imagine a world where anyone can make a living doing what they love.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-10-13:/writing/the-annoyance-of-detail/</id>
    <title type="html">The Annoyance of Detail</title>
    <published>2013-10-13T07:00:00Z</published>
    <updated>2013-10-13T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/the-annoyance-of-detail/"/>
    <content type="html">&lt;p&gt;Just over two weeks ago I switched from Android to iPhone. It’s been an interesting transition, to say the least. Overall, things are pretty similar, and the functionality overlaps. You can easily take photos on both devices, talk, text, and download the vast majority of apps on both platforms. The differences then come down to the Apple Way and the Other Way.&lt;/p&gt;

&lt;p&gt;The Apple Way is that engineers at Apple know what you want better than you know. So they design the interface and the functionality their way. If you want to do something differently, you simply cannot. There is no option, there is no extensibility with external apps. If Apple doesn’t think it should be built into the phone, then you likely won’t be able to do it. There are many examples of core parts of the phone that only internal Apple apps are allowed to use. A few examples Ive noticed are integrating with Siri and changing keyboards.&lt;/p&gt;

&lt;p&gt;But there is one thing that annoys me endlessly: notifications. I think Android’s notification system is awesome (you can even send pictures along with the push notifications). Unfortunately, Apple’s system is not only worse, it’s terrible.&lt;/p&gt;

&lt;p&gt;Both systems work very similar. You get a push notification and you get a banner that drops down along the top of your screen with the first line of text of the notification. Then you can click the banner or pull down the top drawer to see all your notifications. This is mostly the same on both devices. Once you see the list of notifications you can simply click on one to open the related app. However, here is where I begin to be frustratingly annoyed: clearing these notifications. Android’s system is so much better!&lt;/p&gt;

&lt;p&gt;On Android when you click on a notification it is “seen” and then goes away. On iPhone, when you click on a notification it opens the app, but it doesn’t clear the officiation from you list. So then you want to clear out a specific notification. Let’s say you get ten emails. On Android these notifications can be compacted into one notification. So for Gmail if I have one item that will say the specific email’s subject. Once I get a second message this notification transforms into a message that says: “You have 2 unread messages”. On iPhone this just stack up. So if you are not consistently checking your phone you’ll get a long list of emails. And worst of all, even when you click the notification on iPhone it doesn’t go away. You need to manually clear the notification. However, you can only clear all notifications for an app, so I can’t swipe away a few emails and leave the one email that I actually want to be reminded of.&lt;/p&gt;

&lt;p&gt;This is a clear example of a simpler system that Apple decides is the only way to interact with these notifications. The Android system is more powerful, but more complex too. However, I think it’s very easy to learn and I miss it dearly. This will likely be the thing that draws me back to Android sometime in the future.&lt;/p&gt;
</content>
    <summary type="html">Apple's Way or the highway</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-10-07:/writing/courage-and-fear/</id>
    <title type="html">Courage and Fear</title>
    <published>2013-10-07T07:00:00Z</published>
    <updated>2013-10-07T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/courage-and-fear/"/>
    <content type="html">&lt;p&gt;I read two articles this week that both impressed me greatly. The first article was about &lt;a href="http://www.theguardian.com/music/2013/sep/23/pussy-riot-hunger-strike-nadezhda-tolokonnikova"&gt;Nadezhda Tolokonnikova&lt;/a&gt; and her decision to commence a hunger strike. The second was &lt;a href="http://www.theguardian.com/world/2013/oct/03/lavabit-ladar-levison-fbi-encryption-keys-snowden"&gt;Ladar Levison&lt;/a&gt;’s refusal to “&lt;a href="http://lavabit.com/"&gt;become complicit in crimes against the American people&lt;/a&gt;.”&lt;/p&gt;

&lt;p&gt;Many people are talking about what these two people did, and I agree their choices deserve to be both discussed and &lt;a href="https://rally.org/lavabit"&gt;supported&lt;/a&gt;. However, I’m not going to discuss their specific actions. Rather, I’m very interested in these two people’s decisions.&lt;/p&gt;

&lt;p&gt;Sure, both of their stories gained a lot of attention recently before I came across them on the internet. So an argument could be made that attention was a root cause for their decisions. I want to bring this up firstly, and reject it. In both cases, it was quite possible that they would never receive media attention.&lt;/p&gt;

&lt;p&gt;I’m very fascinated by the courage and decisiveness exhibited by Ladar and Nadezhda. I’m extremely impressed by those who have the conviction to make a hard decision and accept whatever fate is a result.&lt;/p&gt;

&lt;p&gt;I find myself asking the question of why am I impressed. Why am I, and so many others, noticing the courage that these two people exhibited. I am frightened by the realization this uncovers. I think as a society we are becoming more and more scared of making the decisions we believe are right.&lt;/p&gt;

&lt;p&gt;Many people do not care, or atleast do not care enough to take action about whatever they feel most important about in their worlds. Some feel guilty about their inaction. Others do not.
What I realize more and more around me is that we are living our lives in fear. Not the primordial fear of death in the eyes of a tiger; but the slight unconscious fear that we call anxiety. The fear that we will lose our jobs, fail our classes, disappoint.&lt;/p&gt;

&lt;p&gt;Google tells me that courage is the ability to do something that frightens one. I am nearly ready to believe that the most terrifying thing about all the wrong things in our world is the quietness of the masses. As an individual steps beyond their fear and does that which they believe is right – something so necessary that they accept any repercussions – do we notice the societal fear from which they emerged.&lt;/p&gt;
</content>
    <summary type="html">The quietness of the masses yells fear.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-09-29:/writing/a-new-beginning/</id>
    <title type="html">A New Beginning</title>
    <published>2013-09-29T07:00:00Z</published>
    <updated>2013-09-29T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/a-new-beginning/"/>
    <content type="html">&lt;p&gt;Yesterday I woke up early in Manhattan. Well, early for a Saturday. This wasn’t the dreadful alarm-induced wake-up. Rather, I was pulled awake excited by the day to come.&lt;/p&gt;

&lt;p&gt;Over the last years I’ve had a few large transitions in my life. These have always been marked by a plane flight. I get on a plane and end up somewhere very new, and very different. When I moved to Spain, and then to Connecticut, France, and New York, I always packed my bags, got on a plane, and started something new. I’ve also taken flights that are simply trips and don’t feel like long nostalgic voyages, but that’s besides the point.&lt;/p&gt;

&lt;p&gt;Yesterday I got on a plane. This was a transitory flight. After my third summer in New York I was finally moving away. Yesterday I flew back to Oregon.&lt;/p&gt;

&lt;p&gt;I was born and raised on a small Organic farm in rainy, beautiful Oregon, outside a town of about 10,000 people. There was exactly one high school – a small town kind of high school where punishment was centered around suspending people from their respective sports team. You see, if you failed your classes, or got caught with a beer, the dreaded penalty was always being forced to miss the upcoming game.&lt;/p&gt;

&lt;p&gt;Yesterday I woke up in Manhattan, had brunch with a friend in a fancy French restaurant, did a few errands in SoHo, and then trekked to JFK Airport. Today I am in the small rural Oregon town where I grew up. For the last few years of my life it has often been back and forth from the fancy, cosmopolitan East Coast to a much shabbier Oregon.&lt;/p&gt;

&lt;p&gt;However, yesterday’s plane flight was not of the visiting nature. It was the transitory kind, the kind that marks a new beginning.&lt;/p&gt;

&lt;p&gt;After I graduated &lt;a href="wesleyan.edu"&gt;college&lt;/a&gt; I felt that having The New York Times on my &lt;a href="/portfolio/"&gt;resume&lt;/a&gt; should be enough to appease my ego and I should set out in pursuit of what I actually wanted to be doing, instead of simply working some job to demonstrate that I was smart and capable of getting some job, i.e. validating my ego. The only problem was I had no idea what I actually wanted to be doing.&lt;/p&gt;

&lt;p&gt;A fortuitous rooftop encounter combined with doing well in French 101 led to a job offer that I wasn’t looking for. I didn’t want to live in New York, so I negotiated to work remote after a few months ramp-up. Despite having never met anyone at the company in person I signed some forms and accepted a job. A week later I was in New York.&lt;/p&gt;

&lt;p&gt;Tomorrow I’m moving to Portland. At first I’ll just crash with family, but then I’m planning to look for an apartment and settle down.&lt;/p&gt;

&lt;p&gt;For so long I’ve been doing things in pre-established time chunks. Fours years of high scohool. One gap year. Four years of college. Three month summer jobs. Every part of my life – until now – has had a fixed completion date. I always knew when it would end.&lt;/p&gt;

&lt;p&gt;Tomorrow, for the first time in my life I’m beginning something that does not have a fixed end. I’m moving to Portland and that’s it. I don’t have a goal, or a timeframe. I’m just going to try and create a life and see how it goes. Maybe I’ll spend three months and move on, or maybe three decades. Either way is fine.&lt;/p&gt;
</content>
    <summary type="html">A new beginning, one without a fixed end.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-09-22:/writing/defining-success/</id>
    <title type="html">Defining Success</title>
    <published>2013-09-22T07:00:00Z</published>
    <updated>2013-09-22T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/defining-success/"/>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;What is it that you do?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was recently asked this question. I knew the speaker was inquiring about my line of work. However, this question – one which I hear quite often – makes huge assumptions about our identities. I believe it suggests, even implies, we are what we do. It assumes we identify most with our job. More than the pastimes we like, or our taste of music, we are our jobs. I’ve lived in two other countries and I think that this type of question is specific to English and likely America. Our identities in America are more tightly connected to our jobs than in other cultures.&lt;/p&gt;

&lt;p&gt;I do not like this question. I don’t like this assumed identity.&lt;/p&gt;

&lt;p&gt;If we live in a culture that so heavily associates identity and occupation, then how do we create the life we want?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Success is having the life you want to have.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I heard this definition of success this week and it resonated strongly with me. When people discuss what they want to do with their lives – whether the elementary prompt “what I want to be when I grow up”, or the adult’s “what do you do” – they discredit the complexity of life and the relationship between the individual and their source of income.&lt;/p&gt;

&lt;p&gt;It is within this perspective that a definition of success that includes, in fact focuses on, the desired life is so refreshing. It is more than refreshing, it is inspiring.&lt;/p&gt;

&lt;p&gt;The response to “what do you want to do” is nearly always a profession: “I want to be a doctor.” I reject this narrative.&lt;/p&gt;

&lt;p&gt;I want us to be asking “what kind of life do you want to have?” This question leads us to deeper insights about who we are and what our priorities are. Understanding these questions provides insight on whether our jobs match this life. &lt;/p&gt;

&lt;p&gt;If we accept this definition, then success is only achievable if we know what kind of life we want.&lt;/p&gt;

&lt;h1 id="technology-and-startups"&gt;Technology and Startups&lt;/h1&gt;

&lt;p&gt;So what do we get if we apply this paradigm of success to startups, and to programmers in particular. We get something really helpful, actually. Maybe you love working on unsolved problems. Maybe you want to be able to work from home. Maybe you want to have time to pursue art. Maybe you want to spend more time with your kids. Maybe you want to pay off your debt. Maybe you want to have financial stability.&lt;/p&gt;

&lt;p&gt;We begin to see past the idea of the job. Maybe you like the idea of working someplace, but in reality it doesn’t offer the things you really &lt;a href="https://medium.com/this-happened-to-me/c02f1ff471c6"&gt;want in life&lt;/a&gt;. It is much easier to take steps in the direction of success if you know what you want.&lt;/p&gt;

&lt;p&gt;My biggest criticism of startups is along these lines. I think some people in the startup community like the idea of a startup much more than the thing itself. Either they like the idea of starting their own company, or working at a startup. However it is the idea, the &lt;a href="http://www.nytimes.com/2013/05/20/technology/yahoo-to-buy-tumblr-for-1-1-billion.html"&gt;sexiness of acquisitions&lt;/a&gt; and &lt;a href="http://techcrunch.com/"&gt;media&lt;/a&gt; that attracts them.&lt;/p&gt;

&lt;p&gt;If we fail to look beyond the idea, if we are unable to understand what it is about a startup that gives us the life we want to have, we will never be successful.&lt;/p&gt;
</content>
    <summary type="html">Success is having the life you want to have.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-09-15:/writing/company-values/</id>
    <title type="html">Do Company Values Matter?</title>
    <published>2013-09-15T07:00:00Z</published>
    <updated>2013-09-15T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/company-values/"/>
    <content type="html">&lt;p&gt;I ran across some articles and sites on startup company values this weekend. One in particular is &lt;a href="http://www.thehappystartupschool.com/about"&gt;The Happy Startup School&lt;/a&gt;. They explain themselves with the following sentence:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We’re seeing a movement of people that want to start businesses firstly as a lifestyle choice, and secondly to make money.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A lot of what The Happy Startup School discusses resonated with me. But it got me thinking about building a company culture, and the importance of explicitly stated values. The website of any corporation will have a page filled with their values, but the majority of them feel vacuous, lacking authenticity. However, a few companies have well-known values that seem to importantly direct the company. The prime example being &lt;a href="http://zappos.com"&gt;Zappos&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Zappos has &lt;a href="http://about.zappos.com/our-unique-culture/zappos-core-values"&gt;ten core values&lt;/a&gt; which seem to be very ingrained in the company. These values are foremost apparent to customers via their customer service.&lt;/p&gt;

&lt;p&gt;In the Zappos story I wonder how many of these values were developed prior to being formalized as their ten core values. Zappos has done an amazing job of creating a company with notable values.&lt;/p&gt;

&lt;p&gt;In the technology world I’m under the impression that a lot of companies start trying to build their culture by establishing a set of values. Often this establishing involves the process of writing them down.&lt;/p&gt;

&lt;p&gt;The Happy Startup School’s Toolkit states:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Think of your core values as those that, when the chips are down, you believe in so much that if you took them away your company would cease to exist. However, don’t just brainstorm some values only to then forget about them – you need to live and abide by them everyday. You values are how you behave not how you would like to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’re going to establish values that you actually have, rather than simply want to have, where do you start. This seems in part a chicken-or-egg problem.&lt;/p&gt;

&lt;p&gt;If you reach to far and employees don’t feel these values present in the company these values may in fact become detrimental. Thus it is definitely and interesting question of how to build a company with strong values.&lt;/p&gt;
</content>
    <summary type="html">Making company values more than a piece of paper.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-09-08:/writing/hours-technical-debt-culture/</id>
    <title type="html">Hours, Technical Debt, and Company Culture</title>
    <published>2013-09-08T07:00:00Z</published>
    <updated>2013-09-08T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/hours-technical-debt-culture/"/>
    <content type="html">&lt;p&gt;I’ve been thinking a lot about startups, long hours, and excellent company culture.&lt;/p&gt;

&lt;p&gt;Excellence applied to a product is easily definable. We all know of the products we love and how excellent they are.&lt;/p&gt;

&lt;p&gt;However, the question of what excellence means for a company is less easily defined. But building an excellent company is as important as – if not more important than – building a successful product. Thus it is something critical to think about as you build a product. You are also building a company and company culture&lt;/p&gt;

&lt;p&gt;Fundamentally, companies consist of people, and I think excellent companies consist of happy people who productively do meaningful work.&lt;/p&gt;

&lt;p&gt;Excellent companies have environments where people can be productive.&lt;/p&gt;

&lt;p&gt;A productive environment is free of interruptions or other disturbances where people can get work done. Happy employees feel excited to come to work and enjoy their working; and feel what they do matters, has an effect, is meaningful.&lt;/p&gt;

&lt;p&gt;Programming is distinct from most other types of work. The code you write will almost certainly last much longer than an email or Powerpoint. Future developers will have to use the systems you build. The design decisions you make right now are thus very important.&lt;/p&gt;

&lt;h1 id="technical-debt"&gt;Technical Debt&lt;/h1&gt;

&lt;p&gt;The brilliant programmer and author &lt;a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330"&gt;Sandi Metz wrote&lt;/a&gt;: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If lack of a feature will force you out of business today it doesn’t matter how much it will cost to deal with the code tomorrow; you must do the best you can in the time you have. Making this kind of design compromise is like borrowing time from the future and is known as taking on technical debt. This is a loan that will eventually need to be repaid, quite likely with interest.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At every company there are examples of technical debt. Some critical part of the application that needed to be done, at whatever the cost. But later on you see the cost. Hours spent agonizing over a confusing, poorly designed part of the code. How much stress does it cause your engineers? And how damaging is it to their happiness if they have to wrangle frustrating systems?&lt;/p&gt;

&lt;p&gt;Taking on technical debt may be necessary, maybe it isn’t. But you will definitely be paying back this debt with interest.&lt;/p&gt;

&lt;p&gt;I think that at almost any point in the timeline of a company you must avoid technical debt furiously. And if you have debt you must deal with it, you must improve your codebase, improve your tests, improve everything.&lt;/p&gt;

&lt;p&gt;Technical debt should be used like duct tape. It should be used when something is broken, and you need to fix it as fast as possible, no matter how terribly. But you will have to spend even more time in the future fixing it. It doesn’t simply fade away.&lt;/p&gt;

&lt;p&gt;When you share &lt;a href="https://blog.dropbox.com/2011/06/yesterdays-authentication-bug/"&gt;user passwords&lt;/a&gt; or the like you use duct tape to fix it. And that’s the only time.&lt;/p&gt;

&lt;p&gt;When you start deciding to take on technical debt to push a feature, you are making a poor choice. You may end up finishing the feature, but then you find bugs in it later, and fixing those bugs is costly and damaging in numerous ways. It is not effective, efficient, or worthwhile.
In this way, I think programming is very different from writing, or cramming for a test, or creating a powerpoint for a talk. When you’re done with any of these, you are done. With programming you aren’t, instead you are taking on dangerous technical debt.&lt;/p&gt;

&lt;p&gt;Working long hours is dangerous, and ultimately stupid for programmers. It is impossible to write great code after some amount of time. After some period of time (some say 6 hours of actual programming) you stop being able to write great code. You start making poor decisions. At that point in time you begin taking on technical debt.&lt;/p&gt;

&lt;p&gt;Once a company starts caring even the slightest about hours we enter the dangerous world of caring about hours. Zach Holman of Github &lt;a href="http://zachholman.com/posts/how-github-works-hours/"&gt;explains the danger&lt;/a&gt;,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Because as soon as you make it about hours, their job becomes less about code and more about hours.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then this terrible thing happens. People start feeling like they need to put in hours regardless of whether they are being productive because there is the expectation that they should be working until 7pm. If a company starts valuing these things then people begin playing games to fulfill these expectations. He continues on to explain why managers like hours: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It gives them the illusion that hours can measure performance.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When a manager asks you to work the weekend to stay on pace with your sprint, they are really saying that hours measure performance. It is a result of the belief that working more hours would cause the team to stay on pace with the sprint. Within this paradigm any failure to complete previous sprints was simply a lack of hours worked. This is false.&lt;/p&gt;

&lt;p&gt;I fundamentally and unequivocally believe that a company culture that cares about hours instead of productivity is broken. Disastrously flawed. The antithesis of excellence.&lt;/p&gt;

&lt;h1 id="deadlines"&gt;Deadlines&lt;/h1&gt;

&lt;p&gt;So you have a deadline and that’s not going to change. How do you meet that deadline? Work smarter, not longer hours. You prioritize intensely, working on only the key things that are necessary for the release. You focus intelligently, removing meetings, hiring, and devops that aren’t completely required for the release. (Generally meetings, devops, etc, need to be done, but not doing them doesn’t create a debt with interest like poor design decisions in your code do.)&lt;/p&gt;

&lt;p&gt;If you are hitting a wall on something, you stop, leave the office, hangout with friends, and then go back at it with fresh eyes.&lt;/p&gt;

&lt;p&gt;The 37Signals folks say this in &lt;a href="http://37signals.com/rework"&gt;Rework&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Our culture celebrates the idea of the workaholic. We hear about people burning the midnight oil. They pull all-nighters and sleep at the office. It’s considered a badge of honor to kill yourself over a project. No amount of work is too much work.
  Not only is this workaholism unnecessary, it’s stupid. Working more doesn’t mean you care more or get more done. It just means you work more.
  Workaholics wind up creating more problems than they solve. First off, working like that just isn’t sustainable over time. When the burnout crash comes – and it will – it’ll hit that much harder.
  Workaholics miss the point, too. They try to fix problems by throwing sheer hours at them. They try to make up for intellectual laziness with brute force. This results in inelegant solutions.
  They even create crises. They don’t look for ways to be more efficient because they actually like working overtime. They enjoy feeling like heroes. They create problems (often unwittingly) just so they can get off on working more.
  Workaholics make the people who don’t stay late feel inadequate for “merely” working reasonable hours. That leads to guilt and poor morale all around. Plus, it leads to an ass-in-seat mentality–people stay late out of obligation, even if they aren’t really being productive.
  If all you do is work, you’re unlikely to have sound judgments. Your values and decision making wind up skewed. You stop being able to decide what’s worth extra effort and what’s not. And you wind up just plain tired. No one makes sharp decisions when tired.
  In the end, workaholics don’t actually accomplish more than nonworkaholics. They may claim to be perfectionists, but that just means they’re wasting time fixating on inconsequential details instead of moving on to the next task.
  Workaholics aren’t heroes. They don’t save the day, they just use it up. The real hero is already home because she figured out a faster way to get things done.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;On Friday I was frustrated, hitting my head against a stupid bug. I continued hitting me head against this bug for a few hours. And I didn’t figure it out. On Saturday night on a train ride I looked at it again, because it was gnawing at me, and I quickly figured it out. It was really enjoyable to figure it out then, in fact. I didn’t have internet, so I looked at the source code of Rails to figure out how it worked, and learned a lot in addition to fixing the bug. I fixed it faster and I felt great about it. This is how it should be done.&lt;/p&gt;

&lt;p&gt;Zach Holman finally says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;By allowing for a more flexible work schedule, you create an atmosphere where employees can be excited about their work. Ultimately it should lead to more hours of work, with those hours being even more productive. Working weekends blur into working nights into working weekdays, since none of the work feels like work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So if you have a deadline looming, you shouldn’t work more hours, you should work more focused, smarter hours. By prioritization and working smart you will get your release done on time.&lt;/p&gt;

&lt;p&gt;Comment on &lt;a href="https://news.ycombinator.com/item?id=6357830"&gt;Hacker News&lt;/a&gt;,  &lt;a href="http://www.reddit.com/r/programming/comments/1m7z2q/technical_debt_long_hours_and_the_myth_of/"&gt;Reddit&lt;/a&gt;, or here.&lt;/p&gt;
</content>
    <summary type="html">Hours don't measure performance, and caring about them is dangerous.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-09-01:/writing/decaying-documentation/</id>
    <title type="html">Decaying Documentation</title>
    <published>2013-09-01T07:00:00Z</published>
    <updated>2013-09-01T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/decaying-documentation/"/>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;How many times have you seen a comment that is out of date? Because comments are not executable, they are merely a form of decaying documentation.&lt;/p&gt;

  &lt;p&gt;&lt;a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/"&gt;Sandi Metz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Comments are a form of decaying documentation! When I read this last week I was shocked. I had heard about comments being quickly out of date, but I had never taken it seriously. I didn’t think that people were serious about this comment hatred.&lt;/p&gt;

&lt;p&gt;Back in college my Computer Science professors always wanted everything to be commented, every function, every non-trivial thing. I developed exactly what you’d expect: a case of over-commentation. I thought it was good. I thought that comments explained the code. I thought wrong. And I’m shocked it took me so long to realize this.&lt;/p&gt;

&lt;p&gt;As I’ve been reading Metz’ excellent book, I’ve been thinking about the point she makes. A point that has been argued by &lt;a href="http://www.codinghorror.com/blog/2008/07/coding-without-comments.html"&gt;some of the bravest&lt;/a&gt; and &lt;a href="http://www.briankotek.com/blog/index.cfm/2008/6/5/Dont-Comment-Your-Code"&gt;brightest&lt;/a&gt; &lt;a href="http://www.codeodor.com/index.cfm/2008/6/18/Common-Excuses-Used-To-Comment-Code-and-What-To-Do-About-Them/2293"&gt;among us&lt;/a&gt;. And I’ve been persuaded.&lt;/p&gt;

&lt;p&gt;Don’t comment your code.&lt;/p&gt;

&lt;p&gt;Rather, great code doesn’t need comments. The code should be designed in a way so that it doesn’t need comments to be understandable.&lt;/p&gt;

&lt;p&gt;Sure, there are times to add comments, but they shouldn’t be the default. They shouldn’t be the ideal that we strive for.&lt;/p&gt;

&lt;p&gt;So next time you see the new kid writing more comments than code, &lt;a href="http://www.amazon.com/Practical-Object-Oriented-Design-Ruby-Addison-Wesley/dp/0321721330/"&gt;have an intervention&lt;/a&gt;.&lt;/p&gt;
</content>
    <summary type="html">Don't comment your code; write readable code.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-08-25:/writing/thoughts-on-jobs/</id>
    <title type="html">Thoughts on Jobs</title>
    <published>2013-08-25T07:00:00Z</published>
    <updated>2013-08-25T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/thoughts-on-jobs/"/>
    <content type="html">&lt;p&gt;Steven Paul Jobs.&lt;/p&gt;

&lt;p&gt;In the tech community (at least in the last five years) no one has been more discussed then Steve Jobs. Most people have a reaction to that name. To some it inspires innovation, creativity, and the drive to build something great. In the startup world many idolize him, thinking him the person to emulate in the search for success.&lt;/p&gt;

&lt;p&gt;Others react negatively to the name, unhappy with his efforts to create solutions that offered little or no customization. Perhaps this is in regards Apple’s efforts at destroying the ability of tinkers and hardware hackers on Apple gear. Perhaps they want their software modifiable and oppose Apple’s antithetical stance. There are free software activists like RMS who believe Steve Jobs did more than any other individual to limit software freedoms. &lt;a href="http://stallman.org/archives/2011-jul-oct.html#06_October_2011_%28Steve_Jobs%29"&gt;Stallman said:&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nobody deserves to have to die - not Jobs, not Mr. Bill, not even people guilty of bigger evils than theirs. But we all deserve the end of Jobs’ malign influence on people’s computing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And then there are those who simply think he was an asshole, and his personality is enough to deflate his accomplishments.&lt;/p&gt;

&lt;p&gt;Of course, as always, this black and white, good or bad, analysis doesn’t work. The dichotomy is easy, but a gross oversimplification.&lt;/p&gt;

&lt;p&gt;I saw the Jobs movie this week starring Ashton Kutcher. I’ve been thinking, not about Steve Jobs himself, but rather about his effect on entrepreneurs and others in the tech community. When we discuss the other influential figures in the tech world this name comes up before any others. Surely, his passing has increased some of the stardom, the myth, and the hype. However, I’m not convinced other tech giants (think Gates, Bezos, Ellison, etc) will leave any type of similar posthumous effect on our field.&lt;/p&gt;

&lt;p&gt;Inspiration is necessary in any creative field. When an idea is born, inspiration is what fuels it. As the creative process begins and product comes into existence the artist can begin to feed off the product itself. That joy of seeing something built motivates.&lt;/p&gt;

&lt;p&gt;But in the space between an idea and product it is inspiration which motivates. I think this is why people are so drawn to the Jobs storyline: his will power to birth ideas was very strong. He wasn’t an engineer. He never wrote a line of code. But he could make an idea come to fruition. I’m not sure if it’s this, or a love of his products, or what exactly that fires up the Apple fans, but watching the Jobs movie does in fact leave you inspired. Inspired to create, to continue creating.&lt;/p&gt;

&lt;p&gt;I think this creativity and inspiration is great. But I sure hope people don’t foolishly think they need to be an asshole to be succesful.&lt;/p&gt;
</content>
    <summary type="html">Rather than thinking about Jobs, let's think about how we think about Jobs.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-08-18:/writing/startups-arent-for-everyone/</id>
    <title type="html">Startups aren't for everyone</title>
    <published>2013-08-18T07:00:00Z</published>
    <updated>2013-08-18T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/startups-arent-for-everyone/"/>
    <content type="html">&lt;p&gt;A friend of mine invited me to have dinner at Google’s huge New York City &lt;a href="http://www.google.com/about/jobs/locations/new-york/"&gt;headquarters&lt;/a&gt;. Huge is an understatement. This place has more square feet than the Empire State Building. Google bought it for &lt;a href="http://www.wired.com/business/2010/12/google-nyc/"&gt;$1.9 billion&lt;/a&gt; in 2010. In fifteen years Google went from two dudes in a garage to the behemoth that everyone in the world knows. Google’s is an old story, but a story that that everyone in tech is familiar with. And walking across the three million square foot 111 Eighth Avenue building is powerful. (Full disclaimer, we didn’t walk, we actually jumped on scooters and scooted across the building.) It’s shocking to see and feel and scoot across one of the most tangible examples of a successful startup.&lt;/p&gt;

&lt;p&gt;Our society is becoming intimate with these stories of tech companies. American popular culture knows their leaders and founders. These companies’ stories become bestselling books and popular movies. We need not wonder the effect, for it is visible. Startups are now a “thing”. People are quitting their jobs to pursue their ideas. And startups are now hip. A few months ago I sat down with the founder/CEO of &lt;a href="https://getlua.com/"&gt;Lua&lt;/a&gt;. He told me the movie The Social Network marked a big switch. Before that movie when he would tell people he was working on a startup they didn’t get it. They didn’t understand why you would quit your job and pursue some far-fetched idea.&lt;/p&gt;

&lt;p&gt;The times have changed and the media is abuzz with startups.&lt;/p&gt;

&lt;p&gt;I’ve often wondered about what drives this startup craze. Not from a macroeconmic perspective, but from the founder-in-coffeeshop perspective. What is the driving force behind entrepreneurs? And is it different from what motivates employees at early startups?&lt;/p&gt;

&lt;p&gt;Obviously money is one incentive – we’re familiar with Facebook’s legion of 20-something millionaires and billionaires. There is also ego. Being one of the first 100 engineers at Google is a pretty shiny badge on your resume. I had an interview with RapGenius back when they had four programmers, and I was asked to code up some some algorithm puzzle. Afterward, they told me that once you’re an early engineer at a successful company you’ll never be asked programming puzzles again. (I’m not sure if this is true.)&lt;/p&gt;

&lt;p&gt;During my days at The New York Times I remember being very skeptical of startups. In New York there was a strong push for every engineer to found or join a startup. I think some of my skepticism was a defense mechanism. But not all of it.&lt;/p&gt;

&lt;p&gt;During my senior year of college I started getting emails from recruiters. One email I actually remember, it was from someone at &lt;a href="http://greylock.com/"&gt;Greylock Partners&lt;/a&gt; wondering if I had a job lined up after graduation. The recruiter began the email with some shameless name dropping:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Evan,&lt;/p&gt;

  &lt;p&gt;I’m part of the team at Greylock Partners; we’re one of the oldest venture capital firms in Silicon Valley and best known for our investments in companies like Facebook, Dropbox, LinkedIn, Clourdera, Pandora, Airbnb, etc.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;She told me to look through the list of their early stage companies and tell her which ones I was interested in. I remember going through the list and being disappointed. None of them got me excited. But the name dropping of these billion dollar companies that everyone has heard of, and then asking me to look through their early investments was a really simple way of encouraging me to believe that every startup on their list would one day be a brand name that they could send out in emails. I told Greylock I wasn’t interested in any of them.&lt;/p&gt;

&lt;p&gt;I was excited by the creativity of many startups but the hype undermined this excitement.&lt;/p&gt;

&lt;p&gt;I had an idealism that I was searching for in a company. I thought (and still believe) ego and money were poor incentives to start a company. If the success story of Facebook didn’t exist, would we still have all these startups? If this wave of startups is another bubble, and it crashes, who will continue to build?&lt;/p&gt;

&lt;p&gt;If you could rip away the money possibility from startups how would the scene change? If one could be certain that their company would never be a known name, would they still pursue it?  Which of these driving forces could we remove and still have founders quitting their lush jobs to hack on ideas in cafés?&lt;/p&gt;

&lt;p&gt;One month ago I started working at a &lt;a href="https://www.brewster.com/"&gt;venture-backed startup in New York City&lt;/a&gt;, my previous skepticism abound. In that month I’ve gotten very excited about what we’re doing. Obviously I want the company to succeed. As I wrote this I wondered if I agreed with the RapGenius guys: is the incentive for a non-founding engineer to have the “street cred” in the tech community of being an early engineer at a successful company?&lt;/p&gt;

&lt;p&gt;But startups as a form a delayed gratification are risky and foolish. If it is the destination of the company, not the journey that excites you, you’re screwed. There’s been a lots written about &lt;a href="https://medium.com/this-happened-to-me/c02f1ff471c6"&gt;people leaving&lt;/a&gt; large companies like Google. And consistently I hear VCs and founders encouraging others to take the risks and be entrepreneurs. But the incentives for why they should do this are not often discussed.&lt;/p&gt;

&lt;p&gt;I want to live in a world where creativity is possible. A world where people can pursue their ideas and build whatever they are most passionate about. But I want this world to be a place where people build, and create, and invent because they love doing it. It shouldn’t be a means to an end. Startups should not be a way to get rich, or satisfy your ego. Startups are a place where this creativity is possible, where crazy ideas aren’t rejected. But we shouldn’t force entrepreneurship on everyone. I don’t think everyone should quit their job to pursue an idea. Rather, I think the people who will enjoy it should be encouraged to do it. Not so they can become rich, nor to grease the ego, but so that the pursuit of creativity becomes a legitimate pursuit. Legitimate in the eyes of the media, of our society, and of our parents.&lt;/p&gt;

&lt;p&gt;Let’s stop telling people to do startups. Let’s support – financially, and otherwise – creativity as a lifestyle, for technologists and for everyone else. Let’s allow the misfits, the round pegs in the square holes to love what they do. And if what they love to do is entrepreneurship, to build companies and products, to think they can change the world, then let’s encourage it.&lt;/p&gt;
</content>
    <summary type="html">If you're playing the startup game just to get lucky at the end, you're out of luck.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-08-11:/writing/manage-resque-jobs-yaml/</id>
    <title type="html">Manage Resque Job Queues in YAML</title>
    <published>2013-08-11T07:00:00Z</published>
    <updated>2013-08-11T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/manage-resque-jobs-yaml/"/>
    <content type="html">&lt;h2 id="one-config-to-rule-them-all"&gt;One config to rule them all&lt;/h2&gt;

&lt;p&gt;This post is about a neat trick to manage all of the queue declarations for many Resque Jobs in a single configuration file using a tad of metaprogramming.&lt;/p&gt;

&lt;h2 id="resque-introduction"&gt;Resque Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/resque/resque/"&gt;Resque&lt;/a&gt; (pronounced like “rescue”) is a Redis-backed library for creating background jobs, placing those jobs on multiple queues, and processing them later. A typical job class looks like this:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;HighPriorityJob&lt;/span&gt; &amp;lt; &lt;span style="color:#036;font-weight:bold"&gt;BaseJob&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#33B"&gt;@queue&lt;/span&gt; = &lt;span style="color:#A60"&gt;:high&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;perform&lt;/span&gt;(args)
&lt;span class="line-numbers"&gt;&lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#777"&gt;# code to do some work&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n7" name="n7"&gt;7&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;And then you can enqueue the job for processing later with &lt;code&gt;Resque.enqueue(HighPriorityJob, args)&lt;/code&gt;. Now you have some workers that run the jobs on each queue. Some jobs are more important than others so you end up with a few different queues. Maybe a &lt;code&gt;high&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, and &lt;code&gt;low&lt;/code&gt; queue relating to the priority of each job.&lt;/p&gt;

&lt;p&gt;This is all fine and dandy for a few jobs. But sometimes your codebase grows and you end up with many different job classes. In this case it can get unwieldy to define each queue in the class itself. Wouldn’t it be nice if you could define which queue any given job runs on in a central YAML file? You could then easily see which jobs run on which queues, easily change which jobs run on which queues, and reduce duplication. Let’s do it!&lt;/p&gt;

&lt;p&gt;Let’s assume we have a bunch of jobs including these:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;MediumPriorityJob&lt;/span&gt; &amp;lt; &lt;span style="color:#036;font-weight:bold"&gt;BaseJob&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#33B"&gt;@queue&lt;/span&gt; = &lt;span style="color:#A60"&gt;:medium&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;perform&lt;/span&gt;(args)
&lt;span class="line-numbers"&gt;&lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;LowPriorityJob&lt;/span&gt; &amp;lt; &lt;span style="color:#036;font-weight:bold"&gt;BaseJob&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#33B"&gt;@queue&lt;/span&gt; = &lt;span style="color:#A60"&gt;:low&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;perform&lt;/span&gt;(args)
&lt;span class="line-numbers"&gt;&lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;OtherPriorityJob&lt;/span&gt; &amp;lt; &lt;span style="color:#036;font-weight:bold"&gt;BaseJob&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#33B"&gt;@queue&lt;/span&gt; = &lt;span style="color:#A60"&gt;:low&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;perform&lt;/span&gt;(args)
&lt;span class="line-numbers"&gt;&lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;The majority of jobs run on the &lt;code&gt;low&lt;/code&gt; queue and this seems like a good default queue for us. Then whenever we have a special job that needs to be run on a separate queue we can define it separately. Let’s imagine what we would want a YAML file to look like:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#606"&gt;job_queues&lt;/span&gt;:
&lt;span class="line-numbers"&gt;&lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#777"&gt;# Defaults for all jobs if not specified&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#606"&gt;default_queue&lt;/span&gt;:
&lt;span class="line-numbers"&gt;&lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#F00;background-color:#FAA"&gt;"low"&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#606"&gt;high_priority_job&lt;/span&gt;:
&lt;span class="line-numbers"&gt;&lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#606"&gt;queue&lt;/span&gt;: &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;high&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n7" name="n7"&gt;7&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#606"&gt;medium_priority_job&lt;/span&gt;:
&lt;span class="line-numbers"&gt;&lt;a href="#n8" name="n8"&gt;8&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#606"&gt;queue&lt;/span&gt;: &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;medium&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Great, let’s settle on &lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html#method-i-underscore"&gt;underscore&lt;/a&gt;‘ing our class names in the YAML file, so ThisIsMyClass becomes this_is_my_class. (If you are not using rails you’ll have to supply your own &lt;code&gt;#underscore&lt;/code&gt; method.)&lt;/p&gt;

&lt;p&gt;Cool, now I find it handy to combine this with the definitions of workers, so I placed that YAML into my resque-pool.yml. But you can place it wherever. Then adding it to our app is as easy as doing a &lt;code&gt;YAML.load&lt;/code&gt; on the file in your app setup. If you’re running on Rails then in an initializer would do the trick. Something like this will work for Rails:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt;&lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#036;font-weight:bold"&gt;Resque&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;RESQUE_JOB_QUEUES&lt;/span&gt; = &lt;span style="color:#036;font-weight:bold"&gt;YAML&lt;/span&gt;.load_file(&lt;span style="color:#036;font-weight:bold"&gt;Rails&lt;/span&gt;.root.join(&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;config/resque-pool.yml&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;))[&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;job_queues&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="a-touch-of-metaprogramming"&gt;A Touch of Metaprogramming&lt;/h2&gt;

&lt;p&gt;Sweet, but how to do we get our jobs to actually follow this configuration file. Well, you may have noticed that all our jobs inherit from the BaseJob class. What’s all that about. Well, a lot of applications have some logging or stats that they want to attach to all the jobs. By having a base class that every job inherits from you can easily manage job-wide settings. And that’s exactly what we will do.&lt;/p&gt;

&lt;p&gt;There’s a handy little method that every class in Ruby has called &lt;a href="http://www.ruby-doc.org/core-2.0/Class.html#method-i-inherited"&gt;&lt;code&gt;#inherited&lt;/code&gt;&lt;/a&gt;  Whenever we do &lt;code&gt;MyClass &amp;lt; YourClass&lt;/code&gt; inherited is called on YourClass with MyClass as the argument.&lt;/p&gt;

&lt;p&gt;In our BaseJob class let’s add an &lt;code&gt;#inherited&lt;/code&gt; method that will assign the queue to the class:&lt;/p&gt;

&lt;div&gt;
&lt;div class="CodeRay"&gt;
  &lt;div class="code"&gt;&lt;pre&gt;&lt;span class="line-numbers"&gt; &lt;a href="#n1" name="n1"&gt;1&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;BaseJob&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n2" name="n2"&gt;2&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#777"&gt;# things that are common to all jobs go up here...&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n3" name="n3"&gt;3&lt;/a&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n4" name="n4"&gt;4&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;inherited&lt;/span&gt;(subclass)
&lt;span class="line-numbers"&gt; &lt;a href="#n5" name="n5"&gt;5&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#777"&gt;# Lookup class specific settings from config/resque-pool.yml&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n6" name="n6"&gt;6&lt;/a&gt;&lt;/span&gt;    subclass_config = &lt;span style="color:#036;font-weight:bold"&gt;Resque&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;RESQUE_JOB_QUEUES&lt;/span&gt;[subclass.name.underscore]
&lt;span class="line-numbers"&gt; &lt;a href="#n7" name="n7"&gt;7&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#777"&gt;# this is replaces having to do @queue = 'low-heavy' in the worker classes&lt;/span&gt;
&lt;span class="line-numbers"&gt; &lt;a href="#n8" name="n8"&gt;8&lt;/a&gt;&lt;/span&gt;    subclass.instance_variable_set(&lt;span style="color:#A60"&gt;:@queue&lt;/span&gt;, &lt;span style="color:#069"&gt;self&lt;/span&gt;.resque_queue_name(subclass_config))
&lt;span class="line-numbers"&gt; &lt;a href="#n9" name="n9"&gt;9&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;strong&gt;&lt;a href="#n10" name="n10"&gt;10&lt;/a&gt;&lt;/strong&gt;&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n11" name="n11"&gt;11&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;def&lt;/span&gt; &lt;span style="color:#069"&gt;self&lt;/span&gt;.&lt;span style="color:#06B;font-weight:bold"&gt;resque_queue_name&lt;/span&gt;(subclass_config)
&lt;span class="line-numbers"&gt;&lt;a href="#n12" name="n12"&gt;12&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#080;font-weight:bold"&gt;if&lt;/span&gt; subclass_config.try(&lt;span style="color:#A60"&gt;:[]&lt;/span&gt;, &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;queue&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="line-numbers"&gt;&lt;a href="#n13" name="n13"&gt;13&lt;/a&gt;&lt;/span&gt;      &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; subclass_config[&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;queue&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="line-numbers"&gt;&lt;a href="#n14" name="n14"&gt;14&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#080;font-weight:bold"&gt;else&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n15" name="n15"&gt;15&lt;/a&gt;&lt;/span&gt;      &lt;span style="color:#080;font-weight:bold"&gt;return&lt;/span&gt; &lt;span style="color:#036;font-weight:bold"&gt;Resque&lt;/span&gt;::&lt;span style="color:#036;font-weight:bold"&gt;RESQUE_JOB_QUEUES&lt;/span&gt;[&lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;span style="color:#D20"&gt;default_queue&lt;/span&gt;&lt;span style="color:#710"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="line-numbers"&gt;&lt;a href="#n16" name="n16"&gt;16&lt;/a&gt;&lt;/span&gt;    &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n17" name="n17"&gt;17&lt;/a&gt;&lt;/span&gt;  &lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;span class="line-numbers"&gt;&lt;a href="#n18" name="n18"&gt;18&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#080;font-weight:bold"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="one-configuration-file-to-rule-them-all"&gt;One configuration file to rule them all&lt;/h2&gt;

&lt;p&gt;And that’s it. Now we can add a new class without having to think about what queue it should be on. It’ll magically use the default queue.&lt;/p&gt;

</content>
    <summary type="html">Ruby metaprogramming + Resque + YAML = one slick configuration file.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-03-23:/writing/next-previous-links-nanoc/</id>
    <title type="html">Next and Previous Links in Nanoc</title>
    <published>2013-03-23T07:00:00Z</published>
    <updated>2013-03-23T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/next-previous-links-nanoc/"/>
    <content type="html">&lt;p&gt;Note: this was tested in Nanoc 3.6.1&lt;/p&gt;

&lt;p&gt;I’ve seen a few questions (and a few incorrect answers) about how to get next and previous links for a given item in &lt;a href="http://nanoc.ws/"&gt;Nanoc&lt;/a&gt;. If you are using the &lt;a href="http://nanoc.ws/docs/api/Nanoc/Helpers/Blogging.html"&gt;blogging&lt;/a&gt; module in Nanoc you can access all your articles in sorted order by descending creation date. Using this we can create a quick helper for next and previous links.&lt;/p&gt;

&lt;p&gt;Add the following to your helpers, usually &lt;code&gt;lib/default.rb&lt;/code&gt; or &lt;code&gt;lib/helpers.rb&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;previous_link&lt;/span&gt;
  &lt;span class="n"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_articles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="n"&gt;prev_article&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_articles&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;prev&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;prev_article&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nil?&lt;/span&gt;
    &lt;span class="s1"&gt;''&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prev_article&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;amp;larr; Previous"&lt;/span&gt;
    &lt;span class="n"&gt;link_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prev_article&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reps&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:class&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"previous"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next_link&lt;/span&gt;
  &lt;span class="n"&gt;nxt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_articles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;nxt&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="s1"&gt;''&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorted_articles&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;nxt&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Next &amp;amp;rarr;"&lt;/span&gt;
    &lt;span class="n"&gt;link_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reps&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:class&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:title&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s important to note that &lt;code&gt;sorted_articles&lt;/code&gt; returns an array where &lt;code&gt;sorted_articles[0]&lt;/code&gt; is the newest article. So if you want to get the next (newer) article you want to decrement the current index.&lt;/p&gt;

&lt;p&gt;Once you have this in a helper module, you can use it in your layout with &lt;code&gt;previous_link&lt;/code&gt;. My &lt;a href="https://github.com/carmi/ecarmi.org-nanoc/blob/develop/layouts/post.haml"&gt;post layout&lt;/a&gt; is in &lt;a href="http://haml.info/"&gt;Haml&lt;/a&gt; so it looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-haml"&gt;&lt;span class="nt"&gt;%article&lt;/span&gt;&lt;span class="nc"&gt;.post&lt;/span&gt;
  &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;yield&lt;/span&gt;

  &lt;span class="nt"&gt;%p&lt;/span&gt;&lt;span class="nc"&gt;.prev&lt;/span&gt;
    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;previous_link&lt;/span&gt;
  &lt;span class="nt"&gt;%p&lt;/span&gt;&lt;span class="nc"&gt;.next&lt;/span&gt;
    &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next_link&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I use this on this blog, and you can check out the full source on &lt;a href="https://github.com/carmi/ecarmi.org-nanoc"&gt;github&lt;/a&gt;.&lt;/p&gt;

</content>
    <summary type="html">How to add next and previous links to a post using Nanoc</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-03-18:/writing/hiring-beginning-programmers/</id>
    <title type="html">Hiring Beginning Programmers</title>
    <published>2013-03-18T07:00:00Z</published>
    <updated>2013-03-18T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/hiring-beginning-programmers/"/>
    <content type="html">
&lt;h1 id="searching-for-potential"&gt;Searching for potential&lt;/h1&gt;

&lt;p&gt;At my &lt;a href="http://wesleyan.edu/"&gt;university&lt;/a&gt; I am the head of a small team of student programmers. We are embedded in a mainly student-run organization within the university’s larger IT department. We develop software and websites to help facilitate the smooth running of an organization with around a hundred part-time student workers. Having a student-run programming group is quite interesting because there is constant turnover. (Almost all students spend four years at the university.) We try to hire first or second year computer science students into our group, and managers have always been seniors. This year, as the manager, I’ve gotten to hire a few new programmers from a pretty good pool of applicants. I’ve found the process of interviewing and hiring these up-and-coming programmers really interesting. Virtually no one had the exact skill set we needed (Ruby or Node) and I expected this. Instead, the process of hiring was not to find those who already knew what we were doing, but rather find those who could learn. Ideally, who could learn on their own, and learn quickly. And since I was the only one interviewing about a dozen candidates, I needed the process to be somewhat quick. This is my experience and thoughts on hiring beginning programmers.&lt;/p&gt;

&lt;h1 id="finding-applicants"&gt;Finding applicants&lt;/h1&gt;

&lt;p&gt;First off, I reached out to students who had taken either introductory programming classes or the year-long introduction to computer science courses. I got responses from students who generally had a taken one or two semesters of programming in either Python or Java. From these I started interviews.&lt;/p&gt;

&lt;h1 id="interviewing"&gt;Interviewing&lt;/h1&gt;

&lt;p&gt;I had an hour long interview with each applicant. When I scheduled the interviews I planned a start time but didn’t say how long the interviews would go. This gave me the freedom to adjust the time as necessary without giving too much away. If after 30 minutes I felt that someone wasn’t a good match, I wanted to be able to wrap up the interview. Similarly, I wanted to be able to take a little more time if I needed. Before the in-person interviews I asked for code samples (often final projects for their classes) and for their preferred languages. The biggest thing I tried to do throughout the interviews was let the interviewees share what they were knowledgeable about instead of making them answer specific questions.&lt;/p&gt;

&lt;h1 id="non-programming-questions"&gt;Non-programming questions&lt;/h1&gt;

&lt;p&gt;I began by asking what experience they had with programming and technology. One kid’s father was a VP at Apple, so he told me that his father let him have a &lt;abbr title="Remember when people still used PCs?"&gt;PC&lt;/abbr&gt; only if he built it from scratch, so he did. I grabbed the nearest &lt;abbr title="Remember when people still used PCs?"&gt;PC&lt;/abbr&gt;, ripped the case off, and asked him to identify all the components. Others said they had experience with &lt;abbr title="HyperText Markup Language"&gt;HTML&lt;/abbr&gt;/&lt;abbr title="Cascading Style Sheets"&gt;CSS&lt;/abbr&gt;, so I asked them to write a simple web page and style it a bit. I tried to ask open-ended questions and then follow up based on responses.&lt;/p&gt;

&lt;h2 id="how-does-the-internet-work"&gt;How does the internet work&lt;/h2&gt;

&lt;p&gt;I asked everyone to explain in as much detail as they knew what happens from when you type www.google.com into your browser and press enter to seeing a rendered web page. (This is one of my favorite questions since it’s so open ended. If you know a bit about &lt;abbr title="Domain Name System"&gt;DNS&lt;/abbr&gt; and &lt;abbr title="HyperText Transfer Protocol"&gt;HTTP&lt;/abbr&gt; requests, you can explain that. If you know about &lt;abbr title="Transmission Control Protocol"&gt;TCP&lt;/abbr&gt;, you can explain how the socket connection is established with a three way handshake. If the frontend is your thing, you can talk about parsing and &lt;abbr title="Document Object Model"&gt;DOM&lt;/abbr&gt; tree construction.) This question encompasses so much that the parts that people know and choose to talk about explains a lot about their knowledge.&lt;/p&gt;

&lt;h1 id="programming-questions"&gt;Programming Questions&lt;/h1&gt;

&lt;p&gt;I asked a few programming questions. There are two reasons I do this. First, to give people the experience of being asked to code under the spotlight. I know a lot of peers whose first coding under pressure was for a job interview. I think giving people this experience in a calmer setting is beneficial for them. Secondly, while I don’t think we should put too much value on how quickly someone can write up &lt;a href="http://ecarmi.org/writing/google-internship/"&gt;binary search in C&lt;/a&gt;, answering some programming questions is a quick way to see how someone approaches a problem. I asked a few questions. I tried to ask easy questions that once solved could be expanded and made more difficult.&lt;/p&gt;

&lt;h2 id="reverse-a-string-or-list"&gt;Reverse a string or list&lt;/h2&gt;

&lt;p&gt;Writing a reverse function for a string or a list is a simple question that allows for a few follow up questions. Once the interviewee has a working reverse function, I ask them how much memory is required to reverse a string of length N. Since the first solution should return a copy of the list, having them think through this leads to a &lt;a href="http://en.wikipedia.org/wiki/In-place_algorithm"&gt;in-place&lt;/a&gt; implementation. So I’ll have them code this up. I like to ask about the differences between the two different versions and which would be better used in what circumstances. Some people go for a recursive reverse function, most jump to iterative first.&lt;/p&gt;

&lt;h2 id="fizzbuzz"&gt;FizzBuzz&lt;/h2&gt;

&lt;p&gt;If I still have time remaining, I’ll ask &lt;a href="http://www.codinghorror.com/blog/2007/02/why-cant-programmers-program.html"&gt;FizzBuzz&lt;/a&gt;. I can usually extend this question by asking them to refactor it into a more Object Oriented solution, if it isn’t already. I’m in the middle of the road about the effectiveness of this question, but so far it’s been decent, allowing me to see how someone thinks through something they haven’t done before.&lt;/p&gt;

&lt;h1 id="what-to-look-for"&gt;What to look for&lt;/h1&gt;

&lt;p&gt;Overall, I just try to have a conversation with the interviewee throughout the process. It’s not so important what they get right and what they don’t. Through talking with them and being attentive to their approach and problem solving I develop a general sense about them. Will they be self-directed? Be able to figure things out? Will they take my job in a few years? As many others say, you don’t want to be working with someone you don’t like. So lastly, I simply ask myself if I like them and would enjoy working and hanging out with them.&lt;/p&gt;

&lt;p&gt;Have you hired beginning programmers? Have you hired looking for potential? Share your experience in the comments or on &lt;a href="https://news.ycombinator.com/item?id=5401663"&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;

</content>
    <summary type="html">There are plenty of guides to hiring rockstar developers, but how do you tell if someone has potential.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2013-02-27:/writing/digital-attachments/</id>
    <title type="html">Digital Attachments</title>
    <published>2013-02-27T08:00:00Z</published>
    <updated>2013-02-27T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/digital-attachments/"/>
    <content type="html">
&lt;h1 id="digital-clutter"&gt;Digital Clutter&lt;/h1&gt;

&lt;p&gt;I received an email (two actually) yesterday warning me a server’s IP address was going to change, and that I needed to update my DNS records for the associated domain. However, the domain was registered eight years ago, and I don’t really use it for anything anymore. The only remaining dregs is an email address, which I had until now forwarded to my current account. Changing the DNS records is easy. You just have to remember which registrar you used eight years ago. And remember which DNS service you use for the domain. And remember or track down the credentials for both these sites. And about then you realize that the server is getting shutdown soon, and that you might as well set up the whole email account on the host you are switching to.&lt;/p&gt;

&lt;p&gt;The digital life many of us live leaves a huge trail of photos, messages, emails, and miscellaneous bits. As the price of digital storage decreases we can easily and affordably keep every last one of these digital remains. &lt;em&gt;But should we?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In America we often have the space to collect and collect and collect. Boxes of stuff rest untouched for years. Sometimes they wait until death, to be discarded by children. On the digital side, possessions are complicated and entangled in legalities. Rather than wandering into these post-mortem preoccupations, I am thinking of our current behaviors and their effects on our lives.&lt;/p&gt;

&lt;h1 id="abandonment"&gt;Abandonment&lt;/h1&gt;

&lt;p&gt;There are times when we obviously want to keep photos, emails, and other data. But having this ability to keep does not mean we should. We need to understand the consequences of this keeping. In my personal agglomeration of bytes I notice how every addition adds to the complexity. We should consider letting the unused parts of our digital past disappear.&lt;/p&gt;
</content>
    <summary type="html">Digical possessions take up space, it's just not in your garage.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2011-08-11:/writing/password-protect-nginx/</id>
    <title type="html">Password Protect Nginx Virtualhost</title>
    <published>2011-08-11T07:00:00Z</published>
    <updated>2011-08-11T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/password-protect-nginx/"/>
    <content type="html">
&lt;h1 id="how-to-password-protect-an-nginx-virtualhost"&gt;How to Password Protect an Nginx virtualhost&lt;/h1&gt;

&lt;p&gt;Note: These instructions were tested on a Joyent Solaris SmartMachine. It should work on all other hosts though.&lt;/p&gt;

&lt;h3 id="modify-nginxconf"&gt;Modify nginx.conf&lt;/h3&gt;
&lt;p&gt;Go into your nginx.conf for your server and add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location  /  {
  auth_basic            "Restricted";
  auth_basic_user_file  sitename.htpasswd;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="create-authentication-file"&gt;Create authentication file&lt;/h3&gt;
&lt;p&gt;Create the authentication file by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo htpasswd -c sitename.htpasswd user
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and it will prompt you for your password for the site.&lt;/p&gt;

&lt;h3 id="reload-nginx"&gt;Reload Nginx&lt;/h3&gt;
&lt;p&gt;Tell nginx to reload its configuration files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You’re done!&lt;/p&gt;

&lt;h3 id="complete-documentation"&gt;Complete Documentation&lt;/h3&gt;
&lt;p&gt;For more information read the full docs on Nginx’s &lt;a href="http://wiki.nginx.org/HttpAuthBasicModule"&gt;basic auth module&lt;/a&gt;.&lt;/p&gt;
</content>
    <summary type="html">A simple guide to enable basic authentication for an Nginx virtualhost.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2011-08-11:/writing/setup-nginx-joyent-solaris-smartmachine/</id>
    <title type="html">Setup Nginx on Joyent's Solaris SmartMachine</title>
    <published>2011-08-11T07:00:00Z</published>
    <updated>2011-08-11T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/setup-nginx-joyent-solaris-smartmachine/"/>
    <content type="html">
&lt;h2 id="smartmachine--solaris--ubuntu"&gt;SmartMachine == Solaris != Ubuntu&lt;/h2&gt;

&lt;p&gt;I recently setup Nginx on my Joyent &lt;a href="http://www.joyent.com/software/smartmachines/"&gt;SmartMachine&lt;/a&gt;. A SmartMachine is just a &lt;a href="http://en.wikipedia.org/wiki/Solaris_(operating_system)"&gt;Solaris&lt;/a&gt; box. However, Solaris ain’t Ubuntu. You don’t have any &lt;a href="http://en.wikipedia.org/wiki/Advanced_Packaging_Tool"&gt;super cow powers&lt;/a&gt; and things are in a slightly different spot.&lt;/p&gt;

&lt;p&gt;Unfortunately, Joyent has &lt;strike&gt;no&lt;/strike&gt;little &lt;a href="http://wiki.joyent.com/display/smart/SmartMachines+Home"&gt;documentation&lt;/a&gt;, and Solaris, like all non-Ubuntu OS’s has documentation that often leaves something to be desired.&lt;/p&gt;

&lt;h2 id="disable-apache"&gt;Disable Apache&lt;/h2&gt;

&lt;p&gt;First off, you need to disable Apache so Nginx can have port 80 all to itself.&lt;/p&gt;

&lt;p&gt;To do this you need to use the &lt;a href="http://wiki.joyent.com/display/smart/About+the+Service+Management+Facility"&gt;service management facility&lt;/a&gt; built into Solaris. While, right now, I’m much more comfortable with upstart and init.d, I think that services might be a decent Solaris functionality. But we will have to see.&lt;/p&gt;

&lt;p&gt;Nonetheless, to see all running services run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svcs -a
STATE          STIME    FMRI
legacy_run      0:20:04 lrc:/etc/rc2_d/S20sysetup
legacy_run      0:20:04 lrc:/etc/rc2_d/S72autoinstall
legacy_run      0:20:04 lrc:/etc/rc2_d/S89PRESERVE
legacy_run      0:20:04 lrc:/etc/rc2_d/S98deallocate
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see a list of online and disabled services. To modify these, use the &lt;code&gt;svcadm&lt;/code&gt; command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo svcadm disable apache
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="install-nginx"&gt;Install Nginx&lt;/h2&gt;

&lt;p&gt;Great. Now we can focus on Nginx.&lt;/p&gt;

&lt;p&gt;Note: If you have never talked outloud about Nginx you may not know that it’s pronounced &lt;a href="http://wiki.nginx.org/Faq#How_do_you_pronounce_.22Nginx.22.3F"&gt;Engine-X&lt;/a&gt;. That’ll make reading this article in your head easier :)&lt;/p&gt;

&lt;p&gt;Nginx is probably already installed on your SmartMachine, but to check you can use &lt;code&gt;pgkin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If installed you’ll see:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ pkgin install nginx
calculating dependencies for nginx...
nothing to do.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And let’s enable it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo svcadm enable nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, to confirm it’s online:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ svcs -a | grep nginx
online          0:20:03 svc:/network/http:nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Awesome.&lt;/p&gt;

&lt;p&gt;If you ran into some issues and are unsure whether Nginx or apache is running try curl’ing localhost with the -I (send a INFO http request) to see the server type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl -I localhost
HTTP/1.1 200 OK
Server: nginx
Date: Mon, 18 Jul 2011 02:16:25 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 5031
Last-Modified: Sun, 17 Jul 2011 23:03:46 GMT
Connection: keep-alive
Accept-Ranges: bytes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Superb. We now have Nginx running on your SmartMachine. You might think that this so far is easy (and it is), but &lt;a href="http://lmgtfy.com/?q=install+nginx+on+joyent+smart+machine"&gt;a quick search&lt;/a&gt; actually has few simple guides or docs on how to get this far.&lt;/p&gt;

&lt;h2 id="configure-nginx"&gt;Configure Nginx&lt;/h2&gt;

&lt;p&gt;Okay, so first off, you’ll be searching and searching for you Nginx configuration files.&lt;/p&gt;

&lt;p&gt;We can find the default directories and files with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ nginx -V
nginx version: nginx/0.8.41
TLS SNI support enabled
configure arguments: --user=www --group=www --with-ld-opt='-L/opt/local/lib -Wl,-R/opt/local/lib' --prefix=/opt/local --sbin-path=/opt/local/sbin --conf-path=/opt/local/etc/nginx/nginx.conf --pid-path=/var/db/nginx/nginx.pid --lock-path=/var/db/nginx/nginx.lock --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/var/db/nginx/client_body_temp --http-proxy-temp-path=/var/db/nginx/proxy_temp --http-fastcgi-temp-path=/var/db/nginx/fstcgi_temp --with-http_ssl_module --with-http_dav_module --with-http_realip_module --with-http_stub_status_module
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, what do we see?
the place to be /opt/local/etc/nginx/nginx.conf&lt;/p&gt;

&lt;p&gt;Okay, so we go look at that in our editor of choice (vim, of course).&lt;/p&gt;

&lt;p&gt;So we have a basic Nginx configuration. But we want a quality setup! We want to have multiple domains running on the same Nginx instance with separate configuration files. So let’s set that up.&lt;/p&gt;

&lt;p&gt;Most systems come with a sites-enabled and sites-available setup. The version you install with pkgin on Solaris sadly does not. But, there is no magic to those directories, so let’s create them ourselves.&lt;/p&gt;

&lt;p&gt;Recalling your Nginx 101 course, sites-available/ is a directory of all the possible site configuration files. Then, when you want to enable a site, you create a symlink (&lt;code&gt;ln -s&lt;/code&gt;) from sites-available to sites-enabled.&lt;/p&gt;

&lt;p&gt;We create those two directories next to where the default nginx.conf file lives.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /opt/local/etc/nginx/sites-enabled
$ sudo mkdir -p /opt/local/etc/nginx/sites-available
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Okay, now it’s configuration time!&lt;/p&gt;

&lt;p&gt;We can leave most of our default nginx.conf file the way it is. But the key line we need to add (unless it is already present in your conf) is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;include /etc/nginx/sites-enabled/*;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This little include can be placed anywhere insude the http {} block&lt;/p&gt;

&lt;p&gt;So my config file looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat nginx.conf 
user www www;
worker_processes 1;
error_log /var/log/nginx/error.log;
pid /var/spool/nginx/nginx.pid;

events {
        worker_connections 1024;
        use /dev/poll; # important on Solaris
}

http {
        include /opt/local/etc/nginx/mime.types;
        default_type application/octet-stream;
        log_format main '$remote_addr - $remote_user [$time_local] $request '
                        '"$status" $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        sendfile off; # important on Solaris
        keepalive_timeout 60;
        server_tokens off; #       gzip on; #       gzip_http_version 1.0; #       gzip_comp_level 2; #       gzip_proxied any; #       gzip_types text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        include /opt/local/etc/nginx/sites-enabled/*;
        server {
                listen 80;
                # Defaults to hostname #               server_name fgad8daa.joyent.us;
                charset utf-8;
                access_log /home/jill/logs/nginx.access.log main;
                location / {
                        root /home/jill/web/public;
                        index index.html index.php maintenance.html;
                }

                # proxy the PHP scripts to Apache listening on 127.0.0.1:80 #               location ~ \.php$ { #                       proxy_pass http://127.0.0.1; #               }

                # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 #               location ~ \.php$ { #                       fastcgi_pass 127.0.0.1:9000; #                       fastcgi_index index.php; #                       fastcgi_param SCRIPT_FILENAME /home/jill/web/public$fastcgi_script_name; #                       include /opt/local/etc/nginx/fastcgi_params; #               }

                location ~ /\.ht {
                        deny all;
                }

                error_page 500 502 503 504 /50x.html;
                location = /50x.html {
                        root share/examples/nginx/html;
                }
        }

        server {
                listen 443;
                # Defaults to hostname #               server_name fgad8daa.joyent.us;
                ssl on;
                ssl_certificate /opt/local/etc/openssl/private/selfsigned.pem;
                ssl_certificate_key /opt/local/etc/openssl/private/selfsigned.pem;
                ssl_prefer_server_ciphers on;

                location / {
                        root /home/jill/web/public;
                        index index.php maintenance.html;
                }

                location ~ /\.ht {
                        deny all;
                }

                error_page 500 502 503 504 /50x.html;
                location = /50x.html {
                        root share/examples/nginx/html;
                }
        }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I added mine right before the &lt;code&gt;server{}&lt;/code&gt; block. I’m not sure what the best practice for placing this include is, but this makes logical sense, you import your settings, and then can override any of them below. This way it’s easier to debug and you won’t have something that’s getting included overwriting your main config.&lt;/p&gt;

&lt;p&gt;Let’s create some sites!&lt;/p&gt;

&lt;p&gt;We simply create a file in our sites-available directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo vim /opt/local/etc/nginx/sites-available/staging.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And my file looks like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
      listen 80;
      # Defaults to hostname
      server_name staging.ecarmi.org;
      charset utf-8;
      access_log /home/jill/www/sites/staging/logs/nginx.access.log main;
      location / {
              root /home/jill/www/sites/staging/web/public;
              index index.html;
      }

      location ~ /\.ht {
              deny all;
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
              root share/examples/nginx/html;
      }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And very importantly, we need to symlink this file to sites-enabled.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo ln -s /opt/local/etc/nginx/sites-available/staging.conf /opt/local/etc/nginx/sites-enabled/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, we need to point a DNS record to the server. I use dnsmadeeasy, so I needed to create an A record of staging.ecarmi.org. that points to 8.12.36.10 which is the public ip address of the server.&lt;/p&gt;

&lt;p&gt;Note, it may take a few minutes for the DNS changes to propagate.&lt;/p&gt;

&lt;h2 id="create-a-directory-structure"&gt;Create a Directory Structure&lt;/h2&gt;

&lt;p&gt;Now we need to create all those directories in the home folder and place our content there. Jill is the default user on Joyent SmartMachines, but the strucutre can be whatever.&lt;/p&gt;

&lt;p&gt;So in jill’s home directory we will create a www/sites structure and then the name of the domain. And for each domain we will need a web/public and logs/ directories&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p ~/www/sites/staging/web/public/
$ mkdir -p ~/www/sites/staging/logs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great, and let’s place our fancy website in the web/public directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo "hello staging server" &amp;gt; ~/www/sites/staging/web/public/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And, don’t forget to restart nginx. We really only need it to reload it’s configuartion settings, so &lt;code&gt;sudo nginx -s reload&lt;/code&gt; should do the trick. If this doesn’t work, you can of course, restart the whole thing.&lt;/p&gt;

&lt;p&gt;Let’s see if it worked. From you local computer&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl staging.ecarmi.org
hello staging server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There it is, it worked. cURL is great to use for testing this kind of stuff out because it doesn’t cache anything.&lt;/p&gt;

&lt;p&gt;Okay, now let’s create another site.&lt;/p&gt;

&lt;h3 id="step-one-create-the-directory-structure-and-files"&gt;Step one: create the directory structure and files:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ mkdir -p ~/www/sites/prod/logs                             
$ mkdir -p ~/www/sites/prod/web/public
$ echo "hello production server" &amp;gt; ~/www/sites/prod/web/public/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and we can also copy over our previous configuration file substituting prod for staging:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo cp /opt/local/etc/nginx/sites-available/staging.conf /opt/local/etc/nginx/sites-available/prod.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And don’t forget to use vim (or sed) to change staging to prod.&lt;/p&gt;

&lt;p&gt;Then symlink prod from sites-available to sites-enabled&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo ln -s /opt/local/etc/nginx/sites-available/prod.conf /opt/local/etc/nginx/sites-enabled/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="step-two"&gt;Step two:&lt;/h3&gt;

&lt;p&gt;Create a DNS A record of prod.ecarmi.org point to the same ip address, replacing ecarmi.org with your own domain.&lt;/p&gt;

&lt;h3 id="step-three"&gt;Step three:&lt;/h3&gt;

&lt;p&gt;have Nginx reload it’s configuration settings&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo nginx -s reload
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or if you want to use svcadm magic&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo svcadm refresh nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and then back to curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ curl prod.ecarmi.org
  hello production server
$ curl staging.ecarmi.org    
  hello staging server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You are good to go!&lt;/p&gt;

</content>
    <summary type="html">A guide to setting up Nginx on a Joyent SmartMachine.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2011-03-28:/writing/google-internship/</id>
    <title type="html">How I (almost) got an internship at Google</title>
    <published>2011-03-28T07:00:00Z</published>
    <updated>2011-12-03T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/google-internship/"/>
    <content type="html">
&lt;div class="ebook-flyer"&gt;
&lt;h3&gt;Book: How to get a Google Internship&lt;/h3&gt;
&lt;a href="/books/google-internship/"&gt;
&lt;img alt="How to get a Google Internship." class="cover" src="/static/img/google-internship-book-cover-240.png" style="float: left; padding-right: 15px;" width="180"&gt;&lt;/a&gt;

&lt;p&gt;Are you wondering how to get a great internship with a top company? Grab a copy of my ebook to learn what the what it takes to get a job with companies including Google, The New York Times, and startups.&lt;/p&gt;
&lt;div class="buy-it-today"&gt;
&lt;a href="/books/google-internship/" class="buy-it-today"&gt;&lt;button&gt;Get the ebook&lt;/button&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;script type="text/javascript" src="https://gumroad.com/js/gumroad.js"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;h1 id="applying-for-an-internship-at-google"&gt;Applying for an internship at Google&lt;/h1&gt;

&lt;div class="disclaimer"&gt;
&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This post has received hundreds of thousands of visits including being on &lt;a href="http://techcrunch.com/2011/05/07/why-the-new-guy-cant-code/"&gt;TechCrunch&lt;/a&gt; and &lt;a href="http://news.ycombinator.com/item?id=2384018"&gt;Hacker News&lt;/a&gt;. Some people liked it, and some absolutely did not.&lt;/p&gt;

&lt;p&gt;I did not share anything I was asked not to share, and I have received no requests to change or remove this post. The &lt;a href="http://devinterviews.pen.io/"&gt;hiring process&lt;/a&gt; is complicated, and I believe an open discussion about current practices in our industry is important. If you are going to interview me and have an opinion/concern about this article, bring it up. Let&amp;#8217;s chat.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Like most every Computer Science student looking for a summer internship, I applied to Google.&lt;/p&gt;

&lt;p&gt;I submitted my application on their &lt;a href="http://www.google.com/jobs/students/us/internships/"&gt;website&lt;/a&gt; on December 31st, 2010 and received a thank you email. About ten days later I was sent an automated email asking me to fill out a Google spreadsheet Beta candidate preference form.&lt;/p&gt;

&lt;p&gt;I heard nothing for a month and a half. And then, on Friday, February 25th, at 5:06pm I got an email from member of the Engineering Staffing Team, Hadas:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Evan,&lt;/p&gt;

  &lt;p&gt;Thanks for your interest in Google!&lt;/p&gt;

  &lt;p&gt;We’ve reviewed your resume and would like to learn more about you. We are interested in speaking to you about a possible summer Software Engineering Internship in one of our North American offices. To start the process we’d like to collect a bit of information from you:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I immediately filled out the forms and responded.&lt;/p&gt;

&lt;p&gt;At 9:30pm that same evening I got another email back:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Evan,&lt;/p&gt;

  &lt;p&gt;Thank you for filling out the forms.
I have forwarded all of your information to Becky (cc’d), the recruiter, who will be reaching out to you.&lt;/p&gt;

  &lt;p&gt;Good luck :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I emailed the recruiter, Becky, and the next day heard back from her. At this point I was increasingly impressed by their responsiveness. I had been talking to other companies and everyone had been very slow and unorganized responding to my emails.&lt;/p&gt;

&lt;p&gt;She explained the process of applying:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;To give you some background, here are the steps for applying for an internship at Google:
First you’ll do 2 technical phone interviews (45 minutes each). If the interviews go well, your information will be shared with potential intern hosts to review as we work to identify a project that is in line with your background and interests. Once a strong match is determined, I will contact you to set up a host interview (30 minute phone call).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This didn’t end up being the process for me. I actually had three technical phone interviews (instead of only two), but I’ll get to that later.&lt;/p&gt;

&lt;p&gt;I wanted to figure out my summer plans as soon as possible, so I scheduled two back-to-back interviews for the following Monday. At this point I had heard from them on Friday after 5pm, and had interviews scheduled for Monday. It seems Googlers don’t mind working on weekends.&lt;/p&gt;

&lt;h1 id="technical-interview-1"&gt;Technical Interview #1&lt;/h1&gt;

&lt;p&gt;I had to read and sign a few forms before the interviews. I read through them very carefully and it didn’t seem they explicitly forbade me from discussing the interviews. Hopefully I don’t get a letter from Google lawyers informing me I broke some agreement. Although a &lt;a href="http://en.wikipedia.org/wiki/Cease_and_desist"&gt;cease-and-desist&lt;/a&gt; letter from Google would be a nice wall ornament.&lt;/p&gt;

&lt;p&gt;I was called by a Site Reliability Engineer who has worked in the industry for 30 years. He was the nicest of the three technical interviewers, and this interview went best.&lt;/p&gt;

&lt;p&gt;He saw &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; on my &lt;a href="https://github.com/carmi/resume/raw/master/resume.pdf" title="My LaTeX Resume"&gt;résume&lt;/a&gt; and asked me a few questions about the templating system. Something along the lines of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;how could you make Django templating better&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next he asked me some questions that should be implemented in Python. I only needed to describe the solutions and did not need to actually code them up. Each question began simple and got increasingly difficult as he added on functionality or requirements.&lt;/p&gt;

&lt;p&gt;Write a function with the following specification:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;em&gt;Input:&lt;/em&gt; a list.&lt;/li&gt;
  &lt;li&gt;
&lt;em&gt;Output:&lt;/em&gt; a copy of the list with duplicates removed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ok, now, change the function to remove the last instances of duplicates instead of the first instances.&lt;/p&gt;

&lt;p&gt;Modify it to remove the n&lt;sup&gt;th&lt;/sup&gt; instance of a given element to be removed&lt;/p&gt;

&lt;p&gt;After a quip that since I was still in school and these were fresh in my mind I was asked some questions about data structures.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Which of the following data structures guarantee O(lg(n)) look up:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;a href="http://en.wikipedia.org/wiki/Red-black_tree"&gt;Red-black tree&lt;/a&gt; - yes.&lt;/li&gt;
  &lt;li&gt;
&lt;a href="http://en.wikipedia.org/wiki/Avl_tree"&gt;AVL tree&lt;/a&gt; - yes.&lt;/li&gt;
  &lt;li&gt;
&lt;a href="http://en.wikipedia.org/wiki/Splay_tree"&gt;Splay tree&lt;/a&gt; - no (they have the property that recently accessed elements are quick to access again, but this causes look up to be O(n) in the worst case.&lt;/li&gt;
  &lt;li&gt;and &lt;a href="http://en.wikipedia.org/wiki/Self-balancing_binary_search_tree#Implementations"&gt;others&lt;/a&gt; I forget.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Lastly, a few Python language specific questions:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What does the &lt;a href="http://www.saltycrane.com/blog/2008/01/how-to-use-args-and-kwargs-in-python/"&gt;asterisk&lt;/a&gt; mean before a parameter in a function declaration.&lt;/li&gt;
  &lt;li&gt;What does a double asterisk mean before a parameter in a function declaration.&lt;/li&gt;
  &lt;li&gt;What do &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;()&lt;/code&gt; declare.&lt;/li&gt;
  &lt;li&gt;What is the difference between &lt;code&gt;()&lt;/code&gt; and &lt;code&gt;(,)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;His actual last question was if I had any questions for him. We chatted a bit and then he let me go so I could relax for ten minutes before the next interviewer called.&lt;/p&gt;

&lt;h1 id="technical-interview-2"&gt;Technical Interview #2&lt;/h1&gt;

&lt;p&gt;This interview was much more difficult. And that was because I had to write real code.&lt;/p&gt;

&lt;p&gt;My interviewer was somewhat new at Google and was working on the Webmaster Tools Team. She graduated three years ago from Carnegie Mellon and said that Google was her first job.&lt;/p&gt;

&lt;p&gt;She had sent me a link to a Google document and asked that I open it up. I opened it up, and she told me the question:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Implement the following algorithm in valid C in the shared Google document:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
&lt;em&gt;Input:&lt;/em&gt; an array of sorted integers.&lt;/li&gt;
  &lt;li&gt;
&lt;em&gt;Output:&lt;/em&gt; the index of a particular integer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A &lt;a href="http://en.wikipedia.org/wiki/Binary_search_algorithm"&gt;binary search&lt;/a&gt; in C. Of course, she didn’t tell me it was binary search, didn’t actually tell me anything else. Once I got a recursive implementation seemingly working (I never actually tested my code afterwards) she told me there was a bug. This process repeated a few times as I looked for bugs in my index calculation and forgot to handle the “not in list” case (return -1).&lt;/p&gt;

&lt;p&gt;I’d like to point out that given two full hours and any high-level language (including pseudocode) only 10 percent of professional programmers implemented binary search correctly, &lt;a href="http://books.google.com/books?id=gJrmszNHQV4C&amp;amp;lpg=PA87&amp;amp;ots=rLOWuzQ4oe&amp;amp;dq=percentage%20of%20binary%20search%20is%20implemented%20incorrectly&amp;amp;pg=PA87#v=onepage&amp;amp;q&amp;amp;f=false"&gt;according to Jon Bently&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hadn’t written any C code for at least a few months. As I began trying to remember proper syntax knowing I was being watched, I wished I had studied up on C before the interview.&lt;/p&gt;

&lt;p&gt;This single question took up most of the 45 minute interview, and I don’t remember any of the other questions.&lt;/p&gt;

&lt;p&gt;I was originally told that I would only have two of these technical interviews. Later that evening after the interviews I got a call from the recruiter. She told me on the phone that they actually wanted to have a third interview with me. I’m not sure exactly why this was, and she wouldn’t elaborate. My guess is that I did well enough to move on, but not good enough to straight out hire me. We planned the third interview for Thursday.&lt;/p&gt;

&lt;h1 id="technical-interview-3"&gt;Technical Interview #3&lt;/h1&gt;

&lt;p&gt;I was called by a guy, who unfortunately, was not as nice as the first interviewer. He asked me which Computer Science classes I had taken, and sounded condescending hearing my response (I was a sophomore and in my fifth C.S. course at the time).&lt;/p&gt;

&lt;p&gt;He asked what had been my hardest projects, and then we got started. He wanted me to write some code, but he had not set up a Google doc like interviewer #2, so he said I would just tell him what code to write down over the phone. This sounded miserable. I suggested that he create a Google doc, and he did. The problem was:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Implement an algorithm that checks whether a &lt;a href="http://en.wikipedia.org/wiki/Sudoku"&gt;sudoku puzzle&lt;/a&gt; is correctly solved or not.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I could do this in Python. The input parameters and everything else were up to me to decide. Luckily I knew something about sudoku puzzles. Sadly I hadn’t solved one in years.&lt;/p&gt;

&lt;p&gt;I got a solution working, but it wasn’t terribly short or clean.&lt;/p&gt;

&lt;h1 id="almost"&gt;Almost&lt;/h1&gt;
&lt;p&gt;The next day I got an email from the recruiter (she called me when she wanted me to proceed with another interview, so I assumed an email was a bad sign):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Evan,&lt;/p&gt;

  &lt;p&gt;Thank you for taking the time to interview for the Software Engineer Seattle/Kirkland Internship position. All the feedback has been reviewed from the interviews and at this point we won’t be moving forward in the process. I know this wasn’t the outcome we were hoping for. We can’t thank you enough for your interest in Google’s careers and unique culture; we hope you will remain enthusiastic about our company. If you have any questions, please feel free to contact me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In exactly one week I had gone through the entire process from being contacted to having three technical interviews and hearing back. By far the fastest process of any company I talked with.&lt;/p&gt;

&lt;p&gt;I really had the feeling that luck was a huge part of it. If I had more recently implemented a binary search, something I had to do last year in a class, and it was fresher on my mind, I might have done it more quickly and with less errors. If I loved solving sudoku, the second problem would have likely been easier. In the end, if you get lucky and the question you are asked is something you are familiar with, then you’re in luck. I had the sense that they did not care very much about prior experience. It only mattered how you did on your interviews in response to a few specific questions.&lt;/p&gt;

&lt;p&gt;I’m glad I had the experience interviewing, and after having had trouble finding information on the internship application process and what to expect I thought I should write up my own story.&lt;/p&gt;

&lt;p&gt;I got an internship with The New York Times the following week.&lt;/p&gt;

&lt;div class="ebook-flyer"&gt;
&lt;a href="/books/google-internship/"&gt;
&lt;img alt="How to get a Google Internship." class="cover" src="/static/img/google-internship-book-cover-240.png" style="float: left; padding-right: 15px;" width="180"&gt;&lt;/a&gt;

&lt;p&gt;If you got all the way down here, why not keep reading. Checkout my &lt;a href="/books/google-internship"&gt;ebook&lt;/a&gt; and learn how you too can get a top notch internship!&lt;/p&gt;

&lt;div class="buy-it-today"&gt;
&lt;a href="/books/google-internship/" class="buy-it-today"&gt;&lt;button&gt;Get the ebook&lt;/button&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;script type="text/javascript" src="https://gumroad.com/js/gumroad.js"&gt;&lt;/script&gt;
&lt;/div&gt;

</content>
    <summary type="html">I had a (well, three) interviews with Google for a summer internship position and lived to tell the tale.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2011-03-27:/writing/print-source-code/</id>
    <title type="html">Printing a hardcopy of source code in LaTeX</title>
    <published>2011-03-27T07:00:00Z</published>
    <updated>2011-03-27T07:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/print-source-code/"/>
    <content type="html">&lt;p&gt;If you ever need to print out a hard copy of source code and the print function of your editor of choice just doesn’t quite do it, or you want to add a nice header to the page, or you want to actually just place a source code file in a written document, here’s a nice way using everyone’s favorite: &lt;a href="http://www.latex-project.org/" title="LaTeX rocks!"&gt;LaTeX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;tl;dr: use the &lt;a href="http://www.ctan.org/tex-archive/macros/latex/contrib/listings/"&gt;listings&lt;/a&gt; package and input your external code file with &lt;code&gt;\lstinputlisting&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So here’s the LaTeX code.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-latex"&gt;&lt;span class="c"&gt;% Declare page size and style.&lt;/span&gt;
&lt;span class="k"&gt;\documentclass&lt;/span&gt;&lt;span class="na"&gt;[a4paper, 12pt]&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;article&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;% Declare which packages to use..&lt;/span&gt;
&lt;span class="k"&gt;\usepackage&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;listings&lt;span class="nb"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;% Define &lt;/span&gt;
&lt;span class="k"&gt;\lstset&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;
    &lt;span class="c"&gt;% Define options for listings&lt;/span&gt;
    language=Python,
    &lt;span class="c"&gt;% Show space characters.&lt;/span&gt;
    showspaces=false,
    &lt;span class="c"&gt;% Show space characters in strings.&lt;/span&gt;
    showstringspaces=false,
    &lt;span class="c"&gt;% Show tab characters.&lt;/span&gt;
    showtabs=false,
    &lt;span class="c"&gt;% Break long lines that go off the page.&lt;/span&gt;
    breaklines=true,
    &lt;span class="c"&gt;% Size of tabs.&lt;/span&gt;
    tabsize=2,
    &lt;span class="c"&gt;% Place line numbers on left.&lt;/span&gt;
    numbers=left,
    &lt;span class="c"&gt;% Place a frame around code.&lt;/span&gt;
    frame=single,
&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\begin&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\lstinputlisting&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;models.py&lt;span class="nb"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;\end&lt;/span&gt;&lt;span class="nb"&gt;{&lt;/span&gt;document&lt;span class="nb"&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Full options for &lt;code&gt;lstset&lt;/code&gt; are in the &lt;a href="http://mirrors.ctan.org/macros/latex/contrib/listings/listings.pdf"&gt;listings documentation&lt;/a&gt;.&lt;/p&gt;

</content>
    <summary type="html">A short guide to printing source code files inline using &lt;a href="http://www.latex-project.org/" title="Yay TeX!"&gt;LaTeX&lt;/a&gt;.</summary>
  </entry>
  <entry>
    <id>tag:ecarmi.org,2011-01-24:/writing/django-on-joyent/</id>
    <title type="html">A (Complete) Guide to Running Django on Joyent Shared Accelerators using Virtualenv, pip, git, and NginX</title>
    <published>2011-01-24T08:00:00Z</published>
    <updated>2011-01-24T08:00:00Z</updated>
    <link rel="alternate" href="https://ecarmi.org/writing/django-on-joyent/"/>
    <content type="html">&lt;div class="toc"&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;a href="#getting-started-setting-up-your-development-environment"&gt;Getting started: setting up your development environment&lt;/a&gt;&lt;ul&gt; 
&lt;li&gt;&lt;a href="#install-django-inside-a-virtualenv"&gt;Install Django inside a virtualenv&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#create-a-git-repository"&gt;Create a git repository&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#use-requirements-and-pip-freeze"&gt;Use requirements and pip freeze&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/li&gt; 
&lt;li&gt;&lt;a href="#deploying-getting-your-app-on-the-server"&gt;Deploying: getting your app on the server&lt;/a&gt;&lt;ul&gt; 
&lt;li&gt;&lt;a href="#install-virtualenv-on-joyent"&gt;Install virtualenv on Joyent&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#upload-your-application-to-the-server"&gt;Upload your application to the server&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#install-packages-on-the-server-with-pip"&gt;Install packages on the server with pip&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#setup-static-media"&gt;Setup static media&lt;/a&gt;&lt;/li&gt; 
&lt;li&gt;&lt;a href="#setup-nginx-and-fastcgi"&gt;Setup NginX and FastCGI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/li&gt; 
&lt;li&gt;&lt;a href="#coming-soon"&gt;Coming Soon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;/div&gt; 
&lt;p&gt;In this guide we&amp;#8217;ll go over the process of deploying a &lt;a href="http://www.djangoproject.com/" title="A kick-ass Python Web framework"&gt;Django&lt;/a&gt; application on a &lt;a href="http://www.joyent.com/" title="A web host where I have a lifetime account"&gt;Joyent&lt;/a&gt; Shared Accelerator (now called SmartMachines).&lt;/p&gt; 
&lt;p&gt;We&amp;#8217;ll be using the following tools:&lt;/p&gt; 
&lt;ul&gt; 
&lt;li&gt;&lt;em&gt;&lt;a href="http://virtualenv.openplans.org/" title="A tool to create isolated Python environments"&gt;Virtualenv&lt;/a&gt;&lt;/em&gt; - to isolate our Python environment and manage software versions.&lt;/li&gt; 
&lt;li&gt;&lt;em&gt;&lt;a href="http://pip.openplans.org/" title="pip installs packages. Python packages."&gt;pip&lt;/a&gt;&lt;/em&gt; - to install packages.&lt;/li&gt; 
&lt;li&gt;&lt;em&gt;&lt;a href="http://git-scm.com/" title="A distributed version control system"&gt;git&lt;/a&gt;&lt;/em&gt; - for version control&lt;/li&gt; 
&lt;li&gt;&lt;em&gt;&lt;a href="http://nginx.org/" title="An HTTP server"&gt;NginX&lt;/a&gt;&lt;/em&gt; - to serve our Django site through FastCGI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 id="getting-started-setting-up-your-development-environment"&gt;Getting started: setting up your development environment&lt;/h1&gt; 
&lt;p&gt;Let&amp;#8217;s setup our development environment on our local machine using &lt;a href="http://virtualenv.openplans.org/" title="A tool to create isolated Python environments"&gt;Virtualenv&lt;/a&gt; and &lt;a href="http://pip.openplans.org/" title="pip installs packages. Python packages."&gt;pip&lt;/a&gt;.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv --no-site-packages mysite
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;mysite/
&lt;span class="nv"&gt;$ &lt;/span&gt;. bin/activate
&lt;span class="nv"&gt;$ &lt;/span&gt;pip --version
pip 0.8.2 from /home/evan/mysite/lib/python2.6/site-packages &lt;span class="o"&gt;(&lt;/span&gt;python 2.6&lt;span class="o"&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Inside your virtualenv upgrade pip.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;pip install --upgrade pip
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;h2 id="install-django-inside-a-virtualenv"&gt;Install Django inside a virtualenv&lt;/h2&gt; 
&lt;p&gt;Note: If your application is already inside a virtualenv with packages installed by pip you can skip down to the &lt;a href="#deploying-getting-your-app-on-the-server"&gt;Deploying&lt;/a&gt; section below.&lt;/p&gt; 
&lt;p&gt;Let&amp;#8217;s install the latest stable release of Django (1.2.4 as of today) using pip.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install Django
Downloading/unpacking Django
  Downloading Django-1.2.4.tar.gz &lt;span class="o"&gt;(&lt;/span&gt;6.4Mb&lt;span class="o"&gt;)&lt;/span&gt;: 6.4Mb downloaded
  Running setup.py egg_info &lt;span class="k"&gt;for &lt;/span&gt;package Django
Installing collected packages: Django
  Running setup.py install &lt;span class="k"&gt;for &lt;/span&gt;Django
    changing mode of build/scripts-2.6/django-admin.py from 644 to 755
    changing mode of /home/evan/mysite/bin/django-admin.py to 755
Successfully installed Django
Cleaning up...
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Create a new project, myproject, here. It should be in the same directory as bin, include, and lib that were created by virtualenv.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;django-admin.py startproject myproject
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;myproject/
&lt;span class="nv"&gt;$ &lt;/span&gt;django-admin.py runserver
Error: Settings cannot be imported, because environment variable DJANGO_SETTINGS_MODULE is undefined.
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Oops! We&amp;#8217;re getting an error because Django cannot find and import our settings.py file. Let&amp;#8217;s fix that by putting our project directory into the virtualenv&amp;#8217;s site-packages directory with a symbolic link:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; ../lib/python2.6/site-packages/&lt;span class="sb"&gt;`&lt;/span&gt;basename &lt;span class="se"&gt;\`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="se"&gt;\`&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;If you are using a different version of Python change &lt;code&gt;python2.6&lt;/code&gt; to reflect that version.&lt;/p&gt; 
&lt;p&gt;And then defining the &lt;code&gt;DJANGO_SETTINGS_MODULE&lt;/code&gt; environment variable. Also, let&amp;#8217;s make it so this environment variable is set every time we activate the virtualenv.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject.settings
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!!&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ../bin/activate
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Now let&amp;#8217;s try the &lt;code&gt;runserver&lt;/code&gt; command again.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;django-admin.py runserver
Validating models...
0 errors found
 
Django version 1.2.4, using settings &lt;span class="s1"&gt;&amp;#39;myproject.settings&amp;#39;&lt;/span&gt; 
Development server is running at http://127.0.0.1:8000/
Quit the server with CONTROL-C.
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Great! Everything is working.&lt;/p&gt; 
&lt;h2 id="create-a-git-repository"&gt;Create a git repository&lt;/h2&gt; 
&lt;p&gt;We want to create our git repository inside the myproject directory to track our Django application.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git init .
Initialized empty Git repository in /home/evan/mysite/myproject/.git/
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;My Django app for Joyent&amp;quot;&lt;/span&gt; &amp;gt; README
&lt;span class="nv"&gt;$ &lt;/span&gt;git add README
&lt;span class="nv"&gt;$ &lt;/span&gt;git commit -m &lt;span class="s2"&gt;&amp;quot;Initialzed repository and added README&amp;quot;&lt;/span&gt; 
&lt;span class="o"&gt;[&lt;/span&gt;master &lt;span class="o"&gt;(&lt;/span&gt;root-commit&lt;span class="o"&gt;)&lt;/span&gt; 7d09bd1&lt;span class="o"&gt;]&lt;/span&gt; Initialzed repository and added README
1 files changed, 1 insertions&lt;span class="o"&gt;(&lt;/span&gt;+&lt;span class="o"&gt;)&lt;/span&gt;, 0 deletions&lt;span class="o"&gt;(&lt;/span&gt;-&lt;span class="o"&gt;)&lt;/span&gt; 
create mode 100644 README
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Here you should create your application. I&amp;#8217;ll just use the &lt;a href="http://docs.djangoproject.com/en/dev/intro/tutorial01/" title="A tutorial to learn Django"&gt;Django Tutorial&lt;/a&gt; for now.&lt;/p&gt; 
&lt;h2 id="use-requirements-and-pip-freeze"&gt;Use requirements and pip freeze&lt;/h2&gt; 
&lt;p&gt;We want to create a list of all the necessary packages for our project. The &lt;code&gt;pip freeze&lt;/code&gt;command can help us with this, but we can&amp;#8217;t just use every package from the list because some packages like &lt;em&gt;fabric&lt;/em&gt; and &lt;em&gt;paramiko&lt;/em&gt; won&amp;#8217;t successfully install on the Share Accelerator.&lt;/p&gt; 
&lt;p&gt;My REQUIREMENTS file is very short:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;cat REQUIREMENTS 
&lt;span class="nv"&gt;Django&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;1.2.4
django-debug-toolbar&lt;span class="o"&gt;==&lt;/span&gt;0.8.4
&lt;span class="nv"&gt;wsgiref&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;0.1.2
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Great. Let&amp;#8217;s get this app running on Joyent.&lt;/p&gt; 
&lt;h1 id="deploying-getting-your-app-on-the-server"&gt;Deploying: getting your app on the server&lt;/h1&gt; 
&lt;p&gt;First off, login to your virtualmin page (my server, harbor, is at &lt;a href="https://virtualmin.joyent.us/harbor/"&gt;https://virtualmin.joyent.us/harbor/&lt;/a&gt; )and create a virtual server for your new site if you haven&amp;#8217;t yet.&lt;/p&gt; 
&lt;p&gt;Now you should create a database. I&amp;#8217;d recommend creating a PostgreSQL database. If you&amp;#8217;d like you can also create a separate user to access the database with. For simplicity, I&amp;#8217;ll just use my main user account for now.&lt;/p&gt; 
&lt;h2 id="install-virtualenv-on-joyent"&gt;Install virtualenv on Joyent&lt;/h2&gt; 
&lt;p&gt;To use &lt;code&gt;virtualenv&lt;/code&gt; on your server you need to first get it on your server. We&amp;#8217;ll download it from &lt;a href="http://pypi.python.org/pypi" title="The Python Package Index"&gt;PyPi&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;ssh&lt;/code&gt; in to your server and:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p &lt;span class="nb"&gt;local&lt;/span&gt;/
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd local&lt;/span&gt;/
&lt;span class="nv"&gt;$ &lt;/span&gt;wget -O virtualenv-1.5.1.tar.gz http://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.5.1.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;tar xzvf virtualenv-1.5.1.tar.gz
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Let&amp;#8217;s now create our virtualenv on our server. This is the same as on our local machine.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python virtualenv.py --no-site-packages ~/django_projects/mysite
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/django_projects/mysite/
&lt;span class="nv"&gt;$ &lt;/span&gt;. bin/activate
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;h2 id="upload-your-application-to-the-server"&gt;Upload your application to the server&lt;/h2&gt; 
&lt;p&gt;Now, get your project directory inside this newly created virtualenv. It really doesn&amp;#8217;t matter how. If you&amp;#8217;re using &lt;a href="http://github.com/" title="Hosted git repositories"&gt;github&lt;/a&gt; you might want to &lt;a href="http://help.github.com/deploy-keys/" title="A github help page on using deploy keys"&gt;create a deploy key&lt;/a&gt; These days, this seems to be the preferred way to deploy.&lt;/p&gt; 
&lt;p&gt;If you&amp;#8217;re using github, clone your project with:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone git@github.com:carmi/mysite.git
Initialized empty Git repository in /users/home/carmi/django_projects/mysite/mysite/.git/
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Great! Now we should have our project directory myproject inside our virtualenv on the same level as &lt;code&gt;bin&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt;. Make sure you&amp;#8217;ve modified your settings file for production and updated the database settings to use your PostgreSQL database instead of sqlite3. My databases looks like:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;ENGINE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;postgresql_psycopg2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;carmi_django_mysite_database&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;USER&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;carmi&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;PASSWORD&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
        &lt;span class="s"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;5432&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Try running &lt;code&gt;django-admin.py syncdb&lt;/code&gt;. If it works then your database is configured correctly.&lt;/p&gt; 
&lt;p&gt;Setup the server&amp;#8217;s virtualenv.:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/django_projects/mysite/myproject/
&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; ../lib/python2.6/site-packages/&lt;span class="sb"&gt;`&lt;/span&gt;basename &lt;span class="se"&gt;\`&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="se"&gt;\`&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; 
span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;myproject.settings
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;!!&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; ../bin/activate
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;h2 id="install-packages-on-the-server-with-pip"&gt;Install packages on the server with pip&lt;/h2&gt; 
&lt;p&gt;Let&amp;#8217;s install the packages in our REQUIREMENTS file.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install -r REQUIREMENTS
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;We will need &lt;a href="http://trac.saddi.com/flup" title="A random collection of WSGI modules"&gt;flup&lt;/a&gt; and psycopg2 (for PostgreSQL). Let&amp;#8217;s install those:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install flup psycopg2
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;h2 id="setup-static-media"&gt;Setup static media&lt;/h2&gt; 
&lt;p&gt;Let&amp;#8217;s assume you have some static media for your project in &lt;code&gt;~/django_projects/mysite/myproject/media/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For security reasons (but don&amp;#8217;t trust me on this) we don&amp;#8217;t want to serve static media (CSS, Javacsript) from inside our project directory. Instead, let&amp;#8217;s create some other directories to serve static media from:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkdir -p ~/django_projects/mysite/web/public
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;And then create a symbolic link from there to our media directory.&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s ~/django_projects/mysite/myproject/media/ ~/django_projects/mysite/web/public/media
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Now let&amp;#8217;s link Django&amp;#8217;s &lt;code&gt;contrib.admin&lt;/code&gt; media to this location:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;ln -s ~/django_projects/mysite/lib/python2.6/site-packages/django/contrib/admin/media/ ~/django_projects/mysite/myproject/media/admin
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;And lastly let&amp;#8217;s configure our &lt;code&gt;settings.py&lt;/code&gt; to use these locations:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/media/&amp;#39;&lt;/span&gt; 
&lt;span class="n"&gt;ADMIN_MEDIA_PREFIX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;/media/admin/&amp;#39;&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;h2 id="setup-nginx-and-fastcgi"&gt;Setup NginX and FastCGI&lt;/h2&gt; 
&lt;p&gt;Now let&amp;#8217;s get &lt;a href="http://nginx.org/" title="An HTTP server"&gt;NginX&lt;/a&gt; running.&lt;/p&gt; 
&lt;p&gt;Create a &lt;code&gt;nginx.conf&lt;/code&gt; file inside your site directory:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/django_projects/m&lt;/span&gt;&lt;span class="n"&gt;ysite&lt;/span&gt;&lt;span class="sr"&gt;/etc/&lt;/span&gt; 
&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="sr"&gt;/django_projects/m&lt;/span&gt;&lt;span class="n"&gt;ysite&lt;/span&gt;&lt;span class="sr"&gt;/etc/&lt;/span&gt;&lt;span class="n"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Edit your &lt;code&gt;nginx.conf&lt;/code&gt; file to look like the following but with your own &lt;a href="http://wiki.joyent.com/shared:ports" title="Joyent wiki page on Managing Ports"&gt;port number&lt;/a&gt;, domain, and username. In the example my port is &lt;code&gt;10071&lt;/code&gt;, my domain is &lt;code&gt;django.joyeurs.com&lt;/code&gt;, and my username is &lt;code&gt;carmi&lt;/code&gt;:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="k"&gt;events&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kn"&gt;worker_connections&lt;/span&gt;  &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 
 
&lt;span class="k"&gt;http&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="kn"&gt;include&lt;/span&gt;     &lt;span class="s"&gt;/opt/local/etc/mime.types&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="kn"&gt;default_type&lt;/span&gt;  &lt;span class="s"&gt;application/octet-stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
 
    &lt;span class="kn"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="kn"&gt;listen&lt;/span&gt;       &lt;span class="mi"&gt;10071&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="kn"&gt;server_name&lt;/span&gt;  &lt;span class="s"&gt;django.joyeurs.com&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
 
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/media&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="kn"&gt;root&lt;/span&gt;   &lt;span class="s"&gt;/users/home/carmi/django_projects/mysite/web/public&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt; 
 
        &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_pass&lt;/span&gt; &lt;span class="s"&gt;unix:/users/home/carmi/django_projects/mysite/myproject/myproject.socket&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
 
            &lt;span class="c1"&gt;# fastcgi parameters&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;PATH_INFO&lt;/span&gt; &lt;span class="nv"&gt;$fastcgi_script_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;QUERY_STRING&lt;/span&gt; &lt;span class="nv"&gt;$query_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;REQUEST_METHOD&lt;/span&gt; &lt;span class="nv"&gt;$request_method&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;SERVER_PORT&lt;/span&gt; &lt;span class="nv"&gt;$server_port&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;SERVER_PROTOCOL&lt;/span&gt; &lt;span class="nv"&gt;$server_protocol&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;SERVER_NAME&lt;/span&gt; &lt;span class="nv"&gt;$server_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;CONTENT_TYPE&lt;/span&gt; &lt;span class="nv"&gt;$content_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
            &lt;span class="kn"&gt;fastcgi_param&lt;/span&gt; &lt;span class="s"&gt;CONTENT_LENGTH&lt;/span&gt; &lt;span class="nv"&gt;$content_length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="p"&gt;}&lt;/span&gt;    
    &lt;span class="p"&gt;}&lt;/span&gt;   
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Create an &lt;code&gt;init.sh&lt;/code&gt; script in your project directory to start the Django FastCGI process that should look like:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/local/bin/bash&lt;/span&gt; 
 
&lt;span class="c"&gt;#Activate the virtualenv&lt;/span&gt; 
&lt;span class="nb"&gt;source&lt;/span&gt; /users/home/carmi/django_projects/mysite/bin/activate
 
&lt;span class="nv"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;myproject&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;PROJECT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/users/home/carmi/django_projects/mysite/myproject&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;PID_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/users/home/carmi/django_projects/mysite/myproject/myproject.pid&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;SOCKET_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/users/home/carmi/django_projects/mysite/myproject/myproject.socket&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;BIN_PYTHON&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/users/home/carmi/django_projects/mysite/bin/python&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;DJANGO_ADMIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/users/home/carmi/django_projects/mysite/bin/django-admin.py&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;OPTIONS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;maxchildren=2 maxspare=2 minspare=1&amp;quot;&lt;/span&gt; 
&lt;span class="nv"&gt;METHOD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prefork&amp;quot;&lt;/span&gt; 
 
&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; in
    start&lt;span class="o"&gt;)&lt;/span&gt; 
      &lt;span class="c"&gt;# Starts the Django process&lt;/span&gt; 
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Starting Django project&amp;quot;&lt;/span&gt; 
      &lt;span class="nv"&gt;$BIN_PYTHON&lt;/span&gt; &lt;span class="nv"&gt;$DJANGO_ADMIN&lt;/span&gt; runfcgi &lt;span class="nv"&gt;$OPTIONS&lt;/span&gt; &lt;span class="nv"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$METHOD&lt;/span&gt; &lt;span class="nv"&gt;socket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$SOCKET_FILE&lt;/span&gt; &lt;span class="nv"&gt;pidfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PID_FILE&lt;/span&gt; 
  ;;  
    stop&lt;span class="o"&gt;)&lt;/span&gt; 
      &lt;span class="c"&gt;# stops the daemon by cating the pidfile&lt;/span&gt; 
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Stopping Django project&amp;quot;&lt;/span&gt; 
      &lt;span class="nb"&gt;kill&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;/bin/cat &lt;span class="nv"&gt;$PID_FILE&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; 
  ;;  
    restart&lt;span class="o"&gt;)&lt;/span&gt; 
      &lt;span class="c"&gt;## Stop the service regardless of whether it was&lt;/span&gt; 
      &lt;span class="c"&gt;## running or not, start it again.&lt;/span&gt; 
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Restarting process&amp;quot;&lt;/span&gt; 
      &lt;span class="nv"&gt;$0&lt;/span&gt; stop
      &lt;span class="nv"&gt;$0&lt;/span&gt; start
  ;;  
    *&lt;span class="o"&gt;)&lt;/span&gt;  
      &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: init.sh (start|stop|restart)&amp;quot;&lt;/span&gt; 
      &lt;span class="nb"&gt;exit &lt;/span&gt;1
  ;;  
&lt;span class="k"&gt;esac&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;You&amp;#8217;ll need to make this &lt;code&gt;init.sh&lt;/code&gt; file executable:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;chmod +x ~/django_projects/mysite/myproject/init.sh
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;Startup the Django FastCGI instance with:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;~/django_projects/mysite/myproject/init.sh start
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;This script also takes &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, and &lt;code&gt;restart&lt;/code&gt; as parameters.&lt;/p&gt; 
&lt;p&gt;Now launch NginX with your configuration file:&lt;/p&gt; 
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;/usr/local/sbin/nginx -p /users/home/carmi/ -c /users/home/carmi/django_projects/mysite/etc/nginx.conf
&lt;/pre&gt;&lt;/div&gt; 
 
 
&lt;p&gt;We should now having our Django application running. Go to &lt;a href="http://domain.com:PORTNUBMER/"&gt;http://domain.com:PORTNUBMER/&lt;/a&gt; to see it. For my app, we can login to the admin interface by going to: &lt;a href="http://django.joyeurs.com:10071/admin/"&gt;http://django.joyeurs.com:10071/admin/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Now, in virtualmin create bootup actions to start the Django FastCGI process and NginX on server reboots.&lt;/p&gt; 
&lt;p&gt;Great! We&amp;#8217;ve just covered setting up a Django application on a Joyent Shared Accelerator using virtualenv, pip, NginX, and git.&lt;/p&gt; 
&lt;p&gt;Please let me know if something is not working, or if you&amp;#8217;d just like to leave some feedback.&lt;/p&gt; 
&lt;h1 id="coming-soon"&gt;Coming Soon&lt;/h1&gt; 
&lt;p&gt;Wait a second! This is a long guide. Are we really all going to repeat the same steps over and over? Coming soon is a python script to automate this entire install process. Stay posted.&lt;/p&gt; 
</content>
    <summary type="html">A guide to installing a &lt;a href="http://www.djangoproject.com/" title="A kick-ass Python Web framework"&gt;Django&lt;/a&gt; application on a Joyent Shared Accelerator inside a &lt;a href="http://virtualenv.openplans.org/" title="A tool to create isolated Python environments"&gt;Virtualenv&lt;/a&gt; using &lt;a href="http://pip.openplans.org/" title="pip installs packages. Python packages."&gt;pip&lt;/a&gt;, &lt;a href="http://git-scm.com/" title="A distributed version control system"&gt;git&lt;/a&gt; and &lt;a href="http://nginx.org/" title="An HTTP server"&gt;NginX&lt;/a&gt;</summary>
  </entry>
</feed>
